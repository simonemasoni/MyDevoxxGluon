[
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529478000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Opening Keynote",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Opening session.</p>\n",
      "id": "LPU-1558",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8d507a9552bae63acfe5ab281503589027e573ab",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Grzegorz Duda"
          },
          "name": "Grzegorz Duda"
        }
      ],
      "title": "Opening",
      "lang": "en",
      "summary": "Opening session."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529479800000,
    "toTime": "09:30",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "opening_key_a_room_1_wednesday_20_9h0_9h30",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529479800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Opening Keynote",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>What should we do, or leave undone, in a day or a lifetime? How much messiness should we accept? What balance of the new and familiar is the most fulfilling? These may seem like uniquely human quandaries; they're not. Computers, like us, confront limited space and time, so computer scientists have been grappling with similar problems for decades. And the solutions they’ve found have much to teach us.\nIn a lively, interdisciplinary talk, Brian Christian shows how algorithms developed for computers also untangle very human questions. They explain how to have better hunches and when to leave things to chance, how to deal with overwhelming choices and how best to connect with others. From finding a spouse to finding a parking spot, from organizing one’s inbox to pee</p>\n",
      "id": "MPC-1193",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/d168f12ec8b83852bab3eb3915f1c133bf80f146",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Brian Christian"
          },
          "name": "Brian Christian"
        }
      ],
      "title": "Algorithms to Live By: The Computer Science of Human Decisions",
      "lang": "en",
      "summary": "What should we do, or leave undone, in a day or a lifetime? How much messiness should we accept? What balance of the new and familiar is the most fulfilling? These may seem like uniquely human quandaries; they're not. Computers, like us, confront limited space and time, so computer scientists have been grappling with similar problems for decades. And the solutions they’ve found have much to teach us.\r\nIn a lively, interdisciplinary talk, Brian Christian shows how algorithms developed for computers also untangle very human questions. They explain how to have better hunches and when to leave things to chance, how to deal with overwhelming choices and how best to connect with others. From finding a spouse to finding a parking spot, from organizing one’s inbox to pee"
    },
    "fromTime": "09:30",
    "toTimeMillis": 1529483400000,
    "toTime": "10:30",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "opening_key_a_room_1_wednesday_20_9h30_10h30",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529485200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Tired of fancy abstractions without actual down to earth implementation? In this talk we will go through both benefits and problems by implementing a real example of event-driven architecture. This will be a lot live coding and we will see how to tackle complex domains. We are going to tackle the problems step by step from various perspectives. From the point of view of the stakeholders our software should have quick time to market, ability to do complex data reporting and fast way to extend and to deploy new features. On the other hand, our fellow developers would be interested in learning curve when it comes to events and how it differs in turns of e.g. unit testing. At the end of each step it will be clear what kind of problems/benefits we have. The talk is going to cover a broad set of buzzwords like: event sourcing, CQRS, distributed systems, Spring Cloud Stream, eventual consistency, unit testing and Event Storming with DDD.</p>\n",
      "id": "LXW-6066",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/b6df42bca4e1f58101ff7654e1229997d1729189",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jakub Pilimon"
          },
          "name": "Jakub Pilimon"
        }
      ],
      "title": "State or events? Which shall I keep?",
      "lang": "en",
      "summary": "Tired of fancy abstractions without actual down to earth implementation? In this talk we will go through both benefits and problems by implementing a real example of event-driven architecture. This will be a lot live coding and we will see how to tackle complex domains. We are going to tackle the problems step by step from various perspectives. From the point of view of the stakeholders our software should have quick time to market, ability to do complex data reporting and fast way to extend and to deploy new features. On the other hand, our fellow developers would be interested in learning curve when it comes to events and how it differs in turns of e.g. unit testing. At the end of each step it will be clear what kind of problems/benefits we have. The talk is going to cover a broad set of buzzwords like: event sourcing, CQRS, distributed systems, Spring Cloud Stream, eventual consistency, unit testing and Event Storming with DDD."
    },
    "fromTime": "11:00",
    "toTimeMillis": 1529488200000,
    "toTime": "11:50",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_wednesday_20_11h0_11h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529485200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>While microservices and containers promise to deliver endless scalability it doesn't mean we automatically get high performing code in these distributed application architectures. We analyzed the top performance bottleneck reasons in 2017 and see familiar patterns such as excessive service roundtrips, bad connection pooling, missing cache layers or simply sending too much data between service tiers.\nIn this session we learn how to quickly pinpoint potential performance bottlenecks - even without executing large scale performance tests.</p>\n",
      "id": "OTF-9120",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/9a08164bbdeb6f7e9cff68f10ca10ff2517503ec",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Andreas Grabner"
          },
          "name": "Andreas Grabner"
        }
      ],
      "title": "Top Performance Challenges in Distributed Architectures",
      "lang": "en",
      "summary": "While microservices and containers promise to deliver endless scalability it doesn't mean we automatically get high performing code in these distributed application architectures. We analyzed the top performance bottleneck reasons in 2017 and see familiar patterns such as excessive service roundtrips, bad connection pooling, missing cache layers or simply sending too much data between service tiers.\r\nIn this session we learn how to quickly pinpoint potential performance bottlenecks - even without executing large scale performance tests. "
    },
    "fromTime": "11:00",
    "toTimeMillis": 1529488200000,
    "toTime": "11:50",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_wednesday_20_11h0_11h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529485200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Today our world is full of things that are “as a service” - infrastructure, containers, platforms, software…and of course functions. With developers just now wrapping their heads around application platforms and containers, what are they to make of functions as a service? How does a busy developer cut through the hype and make sense of the world of serverless, Kubernetes, Spring Cloud Function and all the rest? This talk will clear up the confusion! We examine riff, a FaaS built atop Kubernetes. We will discuss where functions and serverless fits in your world, and how you can get started with some simple demos. Though functions aren’t a silver bullet, they are an important part of the development toolbox; this talk saves you from the buzzword bingo to give you a solid foundation of the FaaS landscape.</p>\n",
      "id": "UQI-3749",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c1404689b8ba883508329bf60df650b7486f4d14",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Nate Schutta"
          },
          "name": "Nate Schutta"
        }
      ],
      "title": "Spring, Functions, Serverless and You",
      "lang": "en",
      "summary": "Today our world is full of things that are “as a service” - infrastructure, containers, platforms, software…and of course functions. With developers just now wrapping their heads around application platforms and containers, what are they to make of functions as a service? How does a busy developer cut through the hype and make sense of the world of serverless, Kubernetes, Spring Cloud Function and all the rest? This talk will clear up the confusion! We examine riff, a FaaS built atop Kubernetes. We will discuss where functions and serverless fits in your world, and how you can get started with some simple demos. Though functions aren’t a silver bullet, they are an important part of the development toolbox; this talk saves you from the buzzword bingo to give you a solid foundation of the FaaS landscape."
    },
    "fromTime": "11:00",
    "toTimeMillis": 1529488200000,
    "toTime": "11:50",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_wednesday_20_11h0_11h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529485200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>What do you get when you join a startup with a well-established enterprise?  How do you lead a large-scale transformation of multiple teams distributed across multiple locations? How do you build trust with teams and executives while evolving? How can established processes, teams and ways of working be transformed? This is a story of the ongoing transformation with setbacks, successes, difficulties, wins and the journey still ahead.</p>\n",
      "id": "EAX-1407",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/5fcb9b08b346fc7f22e1f25a7b1ae38d00fc52b0",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Suavek Zając"
          },
          "name": "Suavek Zając"
        }
      ],
      "title": "Lessons and experiences of leading a large agile transformation",
      "lang": "en",
      "summary": "What do you get when you join a startup with a well-established enterprise?  How do you lead a large-scale transformation of multiple teams distributed across multiple locations? How do you build trust with teams and executives while evolving? How can established processes, teams and ways of working be transformed? This is a story of the ongoing transformation with setbacks, successes, difficulties, wins and the journey still ahead."
    },
    "fromTime": "11:00",
    "toTimeMillis": 1529488200000,
    "toTime": "11:50",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_wednesday_20_11h0_11h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529485200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>\"The best sorting algorithm is quick sort.\"\n\"Indexes make DB faster.\"\n\"Data should be sorted using ORDER BY.\"\n\"Composition - good; inheritance - not good.\"\n\"Windows is an operating system.\"\n\"You must have transactions in your DB.\"\n\"Java is slow.\"\n\"Don't eat yellow snow.\"\n\"You shall not self-sign your certificates.\"\n\"Interrupt in Java is broken.\"</p>\n<p>The IT world is full of mantras/revealed truth, passed (often in oral tradition) among developer tribes. Mindlessly repeated from generation to generation, they cause a reckless usage. At best this results in more harm than good, in the worst case: a total disaster worth whole train of money.\nThe context is indispensable part of each mantra. Right context can help to distinguish proper usage from incoming disaster.</p>\n<p>Do you believe in a mantra by any chance?\nHow to find out the context?\nCan one eat a yellow snow?\nCome and see.</p>\n",
      "id": "YTR-9289",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/45ecc7e35ff71344be48e7da7ae04c15930d2f3b",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Piotr Przybył"
          },
          "name": "Piotr Przybył"
        }
      ],
      "title": "CONTEXTVS, STVLTE! (Context, stupid!)",
      "lang": "en",
      "summary": "\"The best sorting algorithm is quick sort.\"\r\n\"Indexes make DB faster.\"\r\n\"Data should be sorted using ORDER BY.\"\r\n\"Composition - good; inheritance - not good.\"\r\n\"Windows is an operating system.\"\r\n\"You must have transactions in your DB.\"\r\n\"Java is slow.\"\r\n\"Don't eat yellow snow.\"\r\n\"You shall not self-sign your certificates.\"\r\n\"Interrupt in Java is broken.\"\r\n\r\nThe IT world is full of mantras/revealed truth, passed (often in oral tradition) among developer tribes. Mindlessly repeated from generation to generation, they cause a reckless usage. At best this results in more harm than good, in the worst case: a total disaster worth whole train of money.\r\nThe context is indispensable part of each mantra. Right context can help to distinguish proper usage from incoming disaster.\r\n\r\nDo you believe in a mantra by any chance?\r\nHow to find out the context?\r\nCan one eat a yellow snow?\r\nCome and see."
    },
    "fromTime": "11:00",
    "toTimeMillis": 1529488200000,
    "toTime": "11:50",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_wednesday_20_11h0_11h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529490000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Quickie Sessions",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>Kotlin is more powerful every year. This language is great either for imperative and functional programming. However, Kotlin can be used also to creating own Domain-Specified Language. In this session, I will show you how to create your own DSL and use it to create applications even faster with more readable code.</p>\n",
      "id": "NQF-9752",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/dbfcd493f0606994deeb5cc3eea851ec256a47b1",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Artur Czopek"
          },
          "name": "Artur Czopek"
        }
      ],
      "title": "[30 min] DSL - Do Super Language with Kotlin",
      "lang": "en",
      "summary": "Kotlin is more powerful every year. This language is great either for imperative and functional programming. However, Kotlin can be used also to creating own Domain-Specified Language. In this session, I will show you how to create your own DSL and use it to create applications even faster with more readable code."
    },
    "fromTime": "12:20",
    "toTimeMillis": 1529490900000,
    "toTime": "12:35",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "quick_room_2_wednesday_20_12h20_12h35",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529490000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "Quickie Sessions",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>What is a blockchain? Can we use it only for virtual currency? How it works under the hood? What problems does it solve and what problems does it create?</p>\n",
      "id": "SBU-6740",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/d5c79b6a173b182336f69712a61bc23c5d26b9ad",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Mateusz Herbut"
          },
          "name": "Mateusz Herbut"
        }
      ],
      "title": "Blockchain for dummies",
      "lang": "en",
      "summary": "What is a blockchain? Can we use it only for virtual currency? How it works under the hood? What problems does it solve and what problems does it create?"
    },
    "fromTime": "12:20",
    "toTimeMillis": 1529490900000,
    "toTime": "12:35",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "quick_room_3_wednesday_20_12h20_12h35",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529490000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Quickie Sessions",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Most storage systems replicate data across data center asynchronously, which introduces eventual consistency in the system. This is not acceptable for high-value data which requires strongly consistency across data center. At Uber, we build a messaging system that can synchronously replicate data to another data centers such that data will be available even after single data center failure. In this talk, we will discuss how we leverage Apache Zookeeper, Apache Kafka and cloud to build this system.</p>\n",
      "id": "TTE-7832",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/4e1d9e4c543a8af001794051780a385e5ff05ba1",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Mingmin Chen"
          },
          "name": "Mingmin Chen"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/7c1ec78bf6d83256298522cea4dd836921e83e0e",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Hongliang Xu"
          },
          "name": "Hongliang Xu"
        }
      ],
      "title": "Synchronous replication across data center for messaging system at Uber",
      "lang": "en",
      "summary": "Most storage systems replicate data across data center asynchronously, which introduces eventual consistency in the system. This is not acceptable for high-value data which requires strongly consistency across data center. At Uber, we build a messaging system that can synchronously replicate data to another data centers such that data will be available even after single data center failure. In this talk, we will discuss how we leverage Apache Zookeeper, Apache Kafka and cloud to build this system."
    },
    "fromTime": "12:20",
    "toTimeMillis": 1529490900000,
    "toTime": "12:35",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "quick_room_4_wednesday_20_12h20_12h35",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529491800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>Reactive Streams is a standard for asynchronous data processing in a streaming fashion with non-blocking backpressure. Starting from Java 9, they have become a part of the JDK in the form of the java.util.concurrent.Flow interfaces.</p>\n<p>Having the interfaces at hand may tempt you to write your own implementations. Surprising as it may seem, that’s not what they are in the JDK for.</p>\n<p>In this session we’re going to go through the basic concepts of reactive stream processing and see how (not) to use the APIs included in JDK 9+.</p>\n",
      "id": "BUS-1081",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/418fa3ddfa233fe1ac8d3cfe7e9921aefdabf91c",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jacek Kunicki"
          },
          "name": "Jacek Kunicki"
        }
      ],
      "title": "Don’t use Reactive Streams in Java 9+",
      "lang": "en",
      "summary": "Reactive Streams is a standard for asynchronous data processing in a streaming fashion with non-blocking backpressure. Starting from Java 9, they have become a part of the JDK in the form of the java.util.concurrent.Flow interfaces.\r\n\r\nHaving the interfaces at hand may tempt you to write your own implementations. Surprising as it may seem, that’s not what they are in the JDK for.\r\n\r\nIn this session we’re going to go through the basic concepts of reactive stream processing and see how (not) to use the APIs included in JDK 9+."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529494800000,
    "toTime": "13:40",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_wednesday_20_12h50_13h40",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529491800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Software is eating the world. Software is eating software developers’ world. Agile everywhere, constantly changing requirements, technologies, market demands, jobs, positions, structures, managers. The flood of data. Big data. It’s easy to sink. The word is shattering us.\nI confess: I used to be a software developer who often totally misunderstood the management, the business or the customers. For last several years, I’ve been on the other side - I represent the management, the business, and the customer. And I've started seeing and understanding what skills, behaviours and what mindset is the most valuable in a software developer from the perspective of the other side.  And what drives them nuts.\nThe thing is that this “other side” assesses your value and decides on your salary. I reckon you would like to maximise them. Here is how. Before I forget how to talk to developers (as one of them).</p>\n",
      "id": "BOF-2029",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/3e6a0997021698165e17b1e15d9d11f3d93808e6",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Wojciech Seliga"
          },
          "name": "Wojciech Seliga"
        }
      ],
      "title": "How to impress your boss and your customer in a modern software development company",
      "lang": "en",
      "summary": "Software is eating the world. Software is eating software developers’ world. Agile everywhere, constantly changing requirements, technologies, market demands, jobs, positions, structures, managers. The flood of data. Big data. It’s easy to sink. The word is shattering us.\r\nI confess: I used to be a software developer who often totally misunderstood the management, the business or the customers. For last several years, I’ve been on the other side - I represent the management, the business, and the customer. And I've started seeing and understanding what skills, behaviours and what mindset is the most valuable in a software developer from the perspective of the other side.  And what drives them nuts.\r\nThe thing is that this “other side” assesses your value and decides on your salary. I reckon you would like to maximise them. Here is how. Before I forget how to talk to developers (as one of them). "
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529494800000,
    "toTime": "13:40",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_wednesday_20_12h50_13h40",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529491800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>You did great job finishing this web app on time and budget. Design patterns, good code coverage, cutting edge frameworks and best CI ever. It goes to production and boom, clients complain it's too slow. They don't really care, if it's best engineering ever, if each view loads 2 seconds. My presentation will give you hints on how to look for bottlenecks. I will also share simple tricks to make the app work faster, or at least seem to work faster.</p>\n",
      "id": "WIN-9072",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/99abfa77d114c8fd236080fd140f65a7e57b23b9",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Aleksandra Kunysz"
          },
          "name": "Aleksandra Kunysz"
        }
      ],
      "title": "Client says your awesome web app works slowly. Now what?",
      "lang": "en",
      "summary": "You did great job finishing this web app on time and budget. Design patterns, good code coverage, cutting edge frameworks and best CI ever. It goes to production and boom, clients complain it's too slow. They don't really care, if it's best engineering ever, if each view loads 2 seconds. My presentation will give you hints on how to look for bottlenecks. I will also share simple tricks to make the app work faster, or at least seem to work faster."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529494800000,
    "toTime": "13:40",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_wednesday_20_12h50_13h40",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529491800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "security",
      "talkType": "Conference",
      "track": "Security",
      "summaryAsHtml": "<p>Customer identities are valuable, yet strong authentication is expensive. So are damages, and slow, human abuse analytics. We discuss our approach on this problem based on streaming analysis &amp; classification of cheap meta-data.</p>\n",
      "id": "HJW-4737",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/2bc489b5d0452582dfc5da65cba0ffeb2f321e82",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jan Griebsch"
          },
          "name": "Jan Griebsch"
        }
      ],
      "title": "Securing Customer Accounts with Streaming Analytics",
      "lang": "en",
      "summary": "Customer identities are valuable, yet strong authentication is expensive. So are damages, and slow, human abuse analytics. We discuss our approach on this problem based on streaming analysis & classification of cheap meta-data.\r\n"
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529494800000,
    "toTime": "13:40",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_wednesday_20_12h50_13h40",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529491800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "security",
      "talkType": "Conference",
      "track": "Security",
      "summaryAsHtml": "<p>Data is the new gold. Security problems and data leaks are getting more and more attention in the media. Privacy and integrity of your clients (personal) data is more than a hot topic. Are you as a developer prepared?! On the other hand, you could be part of the problem as well. So, how secure are you and how secure is your work.</p>\n",
      "id": "LQY-6116",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/092733dda54e99cf63f600aecd1b750b445bef97",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Brian Vermeer"
          },
          "name": "Brian Vermeer"
        }
      ],
      "title": "Don't be a trojan",
      "lang": "en",
      "summary": "Data is the new gold. Security problems and data leaks are getting more and more attention in the media. Privacy and integrity of your clients (personal) data is more than a hot topic. Are you as a developer prepared?! On the other hand, you could be part of the problem as well. So, how secure are you and how secure is your work."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529494800000,
    "toTime": "13:40",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_wednesday_20_12h50_13h40",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529496000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>In this session, we will primarily focus on OpenWhisk, an open source FaaS (Function-as-a-Service) engine, layered on top of Kubernetes and integrating numerous cloud hosted and \"on-premise\" services.  Serverless is a misnomer, your future cloud native applications will consist of both microservces and functions, often wrapped as Linux containers, but in many cases where you the developer ignore the operational aspects of managing that infrastructure.</p>\n",
      "id": "AQD-4305",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/3477c40ad68908f578a624648d94bfecac0581a5",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Rafael Benevides"
          },
          "name": "Rafael Benevides"
        }
      ],
      "title": "Serverless or Serverfull: Microservices^Functions",
      "lang": "en",
      "summary": "In this session, we will primarily focus on OpenWhisk, an open source FaaS (Function-as-a-Service) engine, layered on top of Kubernetes and integrating numerous cloud hosted and \"on-premise\" services.  Serverless is a misnomer, your future cloud native applications will consist of both microservces and functions, often wrapped as Linux containers, but in many cases where you the developer ignore the operational aspects of managing that infrastructure."
    },
    "fromTime": "14:00",
    "toTimeMillis": 1529499000000,
    "toTime": "14:50",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_wednesday_20_14h0_14h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529496000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>In distributed systems, retries are inevitable. From network errors to replication issues and even outages in downstream dependencies, services operating at a massive scale must be prepared to encounter, identify, and handle failure as gracefully as possible.</p>\n<p>Given the scope and pace at which Uber operates, our systems must be fault-tolerant and uncompromising when it comes to failing intelligently. In particular, in streaming processing and event driven architecture, supporting reliable redeliveries with dead letter queues is a popular ask from many real-time applications and services at Uber. To accomplish this, we leverage Apache Kafka, a popular open source distributed pub/sub messaging platform, which has been industry-tested for delivering high performance at scale. We build competing consumption semantics with dead letter queues on top of existing Kafka APIs and provide interfaces to ack or nack out of order messages with retries and in-process fanout features.</p>\n",
      "id": "YGG-7523",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/4e1d9e4c543a8af001794051780a385e5ff05ba1",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Mingmin Chen"
          },
          "name": "Mingmin Chen"
        }
      ],
      "title": "How Uber builds reliable redeliveries and dead letter queues with Apache Kafka",
      "lang": "en",
      "summary": "In distributed systems, retries are inevitable. From network errors to replication issues and even outages in downstream dependencies, services operating at a massive scale must be prepared to encounter, identify, and handle failure as gracefully as possible.\r\n\r\nGiven the scope and pace at which Uber operates, our systems must be fault-tolerant and uncompromising when it comes to failing intelligently. In particular, in streaming processing and event driven architecture, supporting reliable redeliveries with dead letter queues is a popular ask from many real-time applications and services at Uber. To accomplish this, we leverage Apache Kafka, a popular open source distributed pub/sub messaging platform, which has been industry-tested for delivering high performance at scale. We build competing consumption semantics with dead letter queues on top of existing Kafka APIs and provide interfaces to ack or nack out of order messages with retries and in-process fanout features."
    },
    "fromTime": "14:00",
    "toTimeMillis": 1529499000000,
    "toTime": "14:50",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_wednesday_20_14h0_14h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529496000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Zostałeś liderem lub w najbliższej przyszłości nim zostaniesz?\nA może masz taki cel by kiedyś się nim stać?\nWczoraj byłeś kolegą, dziś jesteś szefem?\nWchodzisz do zupełnie nowego zespołu jako lider?\nMasz za zadanie zarządzać, a Ty nie wiesz co to właściwie znaczy?\nJak poradzić sobie z grupą indywidualistów?\nJak zrobić z grupy ludzi zgrany zespół?\nJak zbudować autorytet?\nJak sprawić, żeby byli zmotywowani i zaangażowani?\nChcesz się dowiedzieć co Ty możesz zrobić, na co masz wpływ? Od czego zacząć?<br  />\nDam Ci krótką instrukcję obsługi, starter z którym zaczniesz swoją przygodę z przywództwem.  Pokażę Ci jakie do przywództwa mają podejście najlepsi oraz powiem jaki będzie Twój pierwszy krok.</p>\n",
      "id": "BHA-2242",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/70ffe4c2a720d40eda8f6b6812793a1fad1370d3",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Anita Przybył"
          },
          "name": "Anita Przybył"
        }
      ],
      "title": "Liderem być.",
      "lang": "en",
      "summary": "Zostałeś liderem lub w najbliższej przyszłości nim zostaniesz? \r\nA może masz taki cel by kiedyś się nim stać? \r\nWczoraj byłeś kolegą, dziś jesteś szefem? \r\nWchodzisz do zupełnie nowego zespołu jako lider?\r\nMasz za zadanie zarządzać, a Ty nie wiesz co to właściwie znaczy? \r\nJak poradzić sobie z grupą indywidualistów? \r\nJak zrobić z grupy ludzi zgrany zespół? \r\nJak zbudować autorytet? \r\nJak sprawić, żeby byli zmotywowani i zaangażowani?\r\nChcesz się dowiedzieć co Ty możesz zrobić, na co masz wpływ? Od czego zacząć?  \r\nDam Ci krótką instrukcję obsługi, starter z którym zaczniesz swoją przygodę z przywództwem.  Pokażę Ci jakie do przywództwa mają podejście najlepsi oraz powiem jaki będzie Twój pierwszy krok. \r\n"
    },
    "fromTime": "14:00",
    "toTimeMillis": 1529499000000,
    "toTime": "14:50",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_wednesday_20_14h0_14h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529496000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Talk based on real case when “just Terraform” wasn’t enough to handle client requirements. We ended up creating a wrapper for it. I will outline the differences between what Terraform is and what some people would like it to be, as well as how we handled such situations.</p>\n",
      "id": "FVL-5658",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/2982991f21138ab271c4ff154ecf26bc86364f15",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Marcin Żbik"
          },
          "name": "Marcin Żbik"
        }
      ],
      "title": "When Terraform alone isn't enough",
      "lang": "en",
      "summary": "Talk based on real case when “just Terraform” wasn’t enough to handle client requirements. We ended up creating a wrapper for it. I will outline the differences between what Terraform is and what some people would like it to be, as well as how we handled such situations."
    },
    "fromTime": "14:00",
    "toTimeMillis": 1529499000000,
    "toTime": "14:50",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_wednesday_20_14h0_14h50",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529496000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Conference",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>In this talk I'd like to show You the biggest advantages of Kotlin - a great new programming language for JVM, Web &amp; Native.</p>\n<p>I use it for over two years now, and I simply love its readability, elegant solutions of Java’s biggest issues, and vast amount of features that we won’t see in Java anytime soon…</p>\n<p>During this talk You'll learn about Kotlin's main characteristics (e.g. null-safety), seamless Java interop, greatest features (e.g. extensions, data classes) etc.</p>\n<p>But, most importantly, you'll see that Kotlin is easy to learn and makes you more productive and satisfied as a developer :)</p>\n",
      "id": "QER-3823",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/9ba1c36cc51cb720587b0e2ccf57ac82a0a48b94",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Grzegorz Dyrda"
          },
          "name": "Grzegorz Dyrda"
        }
      ],
      "title": "Introduction to Kotlin",
      "lang": "en",
      "summary": "In this talk I'd like to show You the biggest advantages of Kotlin - a great new programming language for JVM, Web & Native.\r\n\r\nI use it for over two years now, and I simply love its readability, elegant solutions of Java’s biggest issues, and vast amount of features that we won’t see in Java anytime soon…\r\n\r\nDuring this talk You'll learn about Kotlin's main characteristics (e.g. null-safety), seamless Java interop, greatest features (e.g. extensions, data classes) etc.\r\n\r\nBut, most importantly, you'll see that Kotlin is easy to learn and makes you more productive and satisfied as a developer :)"
    },
    "fromTime": "14:00",
    "toTimeMillis": 1529499000000,
    "toTime": "14:50",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_wednesday_20_14h0_14h50",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529500200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Rich Hickey once said programmers know the benefits of everything and the trade offs of nothing…an approach that can lead a project down a path of frustrated developers and unhappy customers. As architects though, we must consider the trade offs of every new library, language, pattern or approach and quickly make decisions often with incomplete information. How should we think about the inevitable technology choices we have to make on a project? How do we balance competing agendas? How do we keep our team happy and excited without chasing every new thing that someone finds on the inner webs?</p>\n<p>As architects it is our responsibility to effectively guide our teams on the technology journey. In this talk I will outline the importance of trade offs, how we can analyze new technologies and how we can effectively capture the inevitable architectural decisions we will make. I will also explore the value of fitness functions as a way of ensuring the decisions we make are actually reflected in the code base.</p>\n",
      "id": "KBR-3101",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c1404689b8ba883508329bf60df650b7486f4d14",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Nate Schutta"
          },
          "name": "Nate Schutta"
        }
      ],
      "title": "Thinking Architecturally",
      "lang": "en",
      "summary": "Rich Hickey once said programmers know the benefits of everything and the trade offs of nothing…an approach that can lead a project down a path of frustrated developers and unhappy customers. As architects though, we must consider the trade offs of every new library, language, pattern or approach and quickly make decisions often with incomplete information. How should we think about the inevitable technology choices we have to make on a project? How do we balance competing agendas? How do we keep our team happy and excited without chasing every new thing that someone finds on the inner webs?\r\n\r\nAs architects it is our responsibility to effectively guide our teams on the technology journey. In this talk I will outline the importance of trade offs, how we can analyze new technologies and how we can effectively capture the inevitable architectural decisions we will make. I will also explore the value of fitness functions as a way of ensuring the decisions we make are actually reflected in the code base."
    },
    "fromTime": "15:10",
    "toTimeMillis": 1529503200000,
    "toTime": "16:00",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_wednesday_20_15h10_16h0",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529500200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>We all know the REST architectural style to define a good API for your applications. However, REST has its disadvantages and constraints. That’s why Facebook developed GraphQL as an alternative.</p>\n<p>In my talk, I will present you some REST constraints and how GraphQL solves them. I will talk about how we implemented GraphQL in our application and why.</p>\n<p>Get to know our successes… and failures from the first row.</p>\n",
      "id": "AAL-6532",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/7b1343ae194ebbdf00ff5267580571e403d65f2b",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Marcin Stachniuk"
          },
          "name": "Marcin Stachniuk"
        }
      ],
      "title": "GraphQL - when REST API is not enough - lessons learned",
      "lang": "en",
      "summary": "We all know the REST architectural style to define a good API for your applications. However, REST has its disadvantages and constraints. That’s why Facebook developed GraphQL as an alternative.\r\n\r\nIn my talk, I will present you some REST constraints and how GraphQL solves them. I will talk about how we implemented GraphQL in our application and why.\r\n\r\nGet to know our successes… and failures from the first row."
    },
    "fromTime": "15:10",
    "toTimeMillis": 1529503200000,
    "toTime": "16:00",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_wednesday_20_15h10_16h0",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529500200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>Are you an experienced serverless developer who wants a handy guide to unleash the full power of serverless architectures for your production workloads? Do you have questions about whether to choose a stream or an API as your event source, or whether to have one function or many? In this talk, I will first discuss architectural best practices, optimizations, and handy little cheat codes to build secure, high-scale, high-performance serverless applications, using real customer scenarios to illustrate the benefits.\nBut that's not it, speed and agility are essential to today’s businesses. The quicker you can get from an idea to first results, the more you can experiment and innovate with your data, perform ad-hoc analysis, and drive answers to new business questions. In this talk, I will also show how to efficiently build serverless applications, including the use of IoT, Streaming Data and AI services.</p>\n",
      "id": "NOO-2198",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8deefe52fa6c3127154f7d1ed296e7f3e7832fd4",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Adrian Hornsby"
          },
          "name": "Adrian Hornsby"
        }
      ],
      "title": "Building Serverless Interactive Applications",
      "lang": "en",
      "summary": "Are you an experienced serverless developer who wants a handy guide to unleash the full power of serverless architectures for your production workloads? Do you have questions about whether to choose a stream or an API as your event source, or whether to have one function or many? In this talk, I will first discuss architectural best practices, optimizations, and handy little cheat codes to build secure, high-scale, high-performance serverless applications, using real customer scenarios to illustrate the benefits.\r\nBut that's not it, speed and agility are essential to today’s businesses. The quicker you can get from an idea to first results, the more you can experiment and innovate with your data, perform ad-hoc analysis, and drive answers to new business questions. In this talk, I will also show how to efficiently build serverless applications, including the use of IoT, Streaming Data and AI services. \r\n"
    },
    "fromTime": "15:10",
    "toTimeMillis": 1529503200000,
    "toTime": "16:00",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_wednesday_20_15h10_16h0",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529500200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Long time ago there was a role of a business analyst, who would discover and gather client requirements, then together with a system analysts, write them down. Next, they would meet an architect, where they would analyse the impact of those requirements on the architecture, and impact of architecture on business opportunities. This collaboration would provide new ideas for the business, but most of all, would create the analysis that went to developers.</p>\n<p>Then there was the famous C3 project with Kent Beck as the leader. There was no time for formalities, so a new method was born, called eXtreme Programming (XP).</p>\n<p>Then came Scrum and Kanban with Scrum Masters and Product Owners. Neither of them had any experience with XP, but since they loathed the old world, they have fired all the system and business analysts.</p>\n<p>And so, two working methods of requirement analysis were replaced by a single ineffective meeting called \"grooming\", where a seven plus/minus three people, without any preparation, try to estimate something that nobody took time to understand.</p>\n<p>I'd like to show you how we came to this point, why the current situation puts developers in jail, and how to solve this madness.</p>\n",
      "id": "QHF-3252",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/336ea64dfcd4f08def5230a4b4c4013f1e242c7f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jakub Nabrdalik"
          },
          "name": "Jakub Nabrdalik"
        }
      ],
      "title": "User Stories considered harmful: why Product Owners and developers failed at gathering requirements and communication",
      "lang": "en",
      "summary": "Long time ago there was a role of a business analyst, who would discover and gather client requirements, then together with a system analysts, write them down. Next, they would meet an architect, where they would analyse the impact of those requirements on the architecture, and impact of architecture on business opportunities. This collaboration would provide new ideas for the business, but most of all, would create the analysis that went to developers.\r\n\r\nThen there was the famous C3 project with Kent Beck as the leader. There was no time for formalities, so a new method was born, called eXtreme Programming (XP). \r\n\r\nThen came Scrum and Kanban with Scrum Masters and Product Owners. Neither of them had any experience with XP, but since they loathed the old world, they have fired all the system and business analysts.\r\n\r\nAnd so, two working methods of requirement analysis were replaced by a single ineffective meeting called \"grooming\", where a seven plus/minus three people, without any preparation, try to estimate something that nobody took time to understand.\r\n\r\nI'd like to show you how we came to this point, why the current situation puts developers in jail, and how to solve this madness."
    },
    "fromTime": "15:10",
    "toTimeMillis": 1529503200000,
    "toTime": "16:00",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_wednesday_20_15h10_16h0",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529500200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "security",
      "talkType": "Conference",
      "track": "Security",
      "summaryAsHtml": "<p>Security is a tricky field – as developers, it doesn’t seem to matter how the software is designed. There’s always someone able to hack it. But as it turns out, software design can bring security benefits. Often when we hear the word ‘cloud’ we think it’s insecure, but in this talk you’ll learn how design patterns based on concepts such as 12-factor and cloud native apps not only yield great software, but also bring security benefits as an implicit side effect. These design patterns are applicable to legacy as well as green-field development, and regardless if you are running in the cloud or on-premise, you still get the same security benefits. And on top of this, you’ll see how it all comes together to create the foundation of modern software security – software that is secure by design.</p>\n",
      "id": "VRK-2206",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/ed48ce967b7f9059f5770f06ce79fa59faa755a8",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Daniel Deogun"
          },
          "name": "Daniel Deogun"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c904428fb2025f98b43856cbf43148193e537e9e",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Daniel Sawano"
          },
          "name": "Daniel Sawano"
        }
      ],
      "title": "Creating secure software - benefits from cloud thinking",
      "lang": "en",
      "summary": "Security is a tricky field – as developers, it doesn’t seem to matter how the software is designed. There’s always someone able to hack it. But as it turns out, software design can bring security benefits. Often when we hear the word ‘cloud’ we think it’s insecure, but in this talk you’ll learn how design patterns based on concepts such as 12-factor and cloud native apps not only yield great software, but also bring security benefits as an implicit side effect. These design patterns are applicable to legacy as well as green-field development, and regardless if you are running in the cloud or on-premise, you still get the same security benefits. And on top of this, you’ll see how it all comes together to create the foundation of modern software security – software that is secure by design."
    },
    "fromTime": "15:10",
    "toTimeMillis": 1529503200000,
    "toTime": "16:00",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_wednesday_20_15h10_16h0",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529505000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>Besides being criticized for disrupting the control flow, exception handling in Java is often considered cumbersome and not very aesthetically appealing.</p>\n<p>In this session, we’ll have a look at how functional languages approach error handling, what can we learn from them and how to adapt those solutions in the world of Java.</p>\n<p>Simply put, we'll see how can we avoid “throws” and \"try-catch\" by leveraging type-driven-development (Optional, Try, Either).</p>\n",
      "id": "IGW-1712",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/928aebc5e07a4219b0a44a8e6f6f980f6f782013",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Grzegorz Piwowarek"
          },
          "name": "Grzegorz Piwowarek"
        }
      ],
      "title": "A Hitchhiker's Guide to the Functional Exception Handling in Java",
      "lang": "en",
      "summary": "Besides being criticized for disrupting the control flow, exception handling in Java is often considered cumbersome and not very aesthetically appealing. \r\n\r\nIn this session, we’ll have a look at how functional languages approach error handling, what can we learn from them and how to adapt those solutions in the world of Java.\r\n\r\nSimply put, we'll see how can we avoid “throws” and \"try-catch\" by leveraging type-driven-development (Optional, Try, Either)."
    },
    "fromTime": "16:30",
    "toTimeMillis": 1529508000000,
    "toTime": "17:20",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_wednesday_20_16h30_17h20",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529505000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>When was the last time you run any production code on single-core CPU? And even if, was it a single-threaded code? We shield ourselves from threads with layers of abstractions that promise to take care of everything. However it is often impossible to talk about the application without understanding the underlying thread model.</p>\n<p>During this talk i would like to get back to basics. Where does the JVM take threads from? How much a thread cost? How do the threads interact and is my CPU any different from distributed system? Why do we create thread pools and how to control them? How many (and what) threads are there in typical app? You will find answers to those questions on my presentation.</p>\n",
      "id": "CVQ-3263",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c55482024f2289666ddaf7022e16a48051690a86",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Adam Dubiel"
          },
          "name": "Adam Dubiel"
        }
      ],
      "title": "Back to basics: threads",
      "lang": "en",
      "summary": "When was the last time you run any production code on single-core CPU? And even if, was it a single-threaded code? We shield ourselves from threads with layers of abstractions that promise to take care of everything. However it is often impossible to talk about the application without understanding the underlying thread model.\r\n\r\nDuring this talk i would like to get back to basics. Where does the JVM take threads from? How much a thread cost? How do the threads interact and is my CPU any different from distributed system? Why do we create thread pools and how to control them? How many (and what) threads are there in typical app? You will find answers to those questions on my presentation."
    },
    "fromTime": "16:30",
    "toTimeMillis": 1529508000000,
    "toTime": "17:20",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_wednesday_20_16h30_17h20",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529505000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>The talk reveals a performance architectural approach from a high level of abstraction down to the hardware.</p>\n<p>Focused on a top-down approach, it covers the main layers where a software architect or performance engineer must be involved by revealing performance design principles, tactics, patterns, algorithms, strategies, operating system and hardware level optimizations.</p>\n",
      "id": "IRK-7745",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/16b2c8d0ebd0addead054b244ca6fbe5241f789d",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Ionut Balosin"
          },
          "name": "Ionut Balosin"
        }
      ],
      "title": "Architecting for performance. A top-down approach.",
      "lang": "en",
      "summary": "The talk reveals a performance architectural approach from a high level of abstraction down to the hardware.\r\n\r\nFocused on a top-down approach, it covers the main layers where a software architect or performance engineer must be involved by revealing performance design principles, tactics, patterns, algorithms, strategies, operating system and hardware level optimizations."
    },
    "fromTime": "16:30",
    "toTimeMillis": 1529508000000,
    "toTime": "17:20",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_wednesday_20_16h30_17h20",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529505000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Are you still using Docker in production? Get over it! Serverless is the NEW future of the Cloud. But since the Cloud is still someone else's computer, that needs to be managed too. And if it is sitting idle, you probably have to pay for it whether you like it or not. No server can be more easily managed than no server. Therefore: meet Serverless, a new paradigm that truly approaches the Pay-as-You-Go philosophy once promised by the Cloud.</p>\n<p>This talk explores Serverless, its impact on existing architectures, and assesses it's usability for Mobile Back-ends as a Service (MBaaS), Functions-as-a-Service (FaaS) and also for Microservices based architectures hosted in the cloud. Internet connectivity permitting, there will be demos too.</p>\n",
      "id": "VRZ-5918",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/594bae1c7277db2b4cc3d8119a710e50e4030552",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bert Ertman"
          },
          "name": "Bert Ertman"
        }
      ],
      "title": "Serverless: The Future of the Cloud?!",
      "lang": "en",
      "summary": "Are you still using Docker in production? Get over it! Serverless is the NEW future of the Cloud. But since the Cloud is still someone else's computer, that needs to be managed too. And if it is sitting idle, you probably have to pay for it whether you like it or not. No server can be more easily managed than no server. Therefore: meet Serverless, a new paradigm that truly approaches the Pay-as-You-Go philosophy once promised by the Cloud.\r\n\r\nThis talk explores Serverless, its impact on existing architectures, and assesses it's usability for Mobile Back-ends as a Service (MBaaS), Functions-as-a-Service (FaaS) and also for Microservices based architectures hosted in the cloud. Internet connectivity permitting, there will be demos too."
    },
    "fromTime": "16:30",
    "toTimeMillis": 1529508000000,
    "toTime": "17:20",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_wednesday_20_16h30_17h20",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529505000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>In 2011 we delivered 2 major releases of our on premise enterprise software. Market, technology and customer requirements forced us to change that in order to remain competitive.</p>\n<p>Now – in 2017 - we are deploying and providing feature releases every 2 weeks for both our on premise and SaaS-based offering. We deploy 170 SaaS production changes per day and have a DevOps pipeline that allows us to deploy a code change within 1h if necessary.</p>\n<p>To increase quality, we built and provide a DevOps pipeline that currently executes 31000 Unit ABSTRACT Integration Tests per Hour as well as 60h UI Tests per Build. Our application teams are responsible end-to-end for their features and use production monitoring to validate their deployments which allows them to find 93% of bugs in production before it impacts our end users.</p>\n<p>In this session I explain how this transformation worked from both “Top Down” as well as “Bottom Up” in our organization. A key component was the 4 people strong DevOps Team w</p>\n<p>I will also talk about the “dark moments” as change is never without friction. Both internally as well as with our customers who also had to get used to more rapid changes.</p>\n",
      "id": "KSN-2898",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/9a08164bbdeb6f7e9cff68f10ca10ff2517503ec",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Andreas Grabner"
          },
          "name": "Andreas Grabner"
        }
      ],
      "title": "From 6 Month Waterfall To 1h Code Deploys",
      "lang": "en",
      "summary": "In 2011 we delivered 2 major releases of our on premise enterprise software. Market, technology and customer requirements forced us to change that in order to remain competitive.\r\n\r\nNow – in 2017 - we are deploying and providing feature releases every 2 weeks for both our on premise and SaaS-based offering. We deploy 170 SaaS production changes per day and have a DevOps pipeline that allows us to deploy a code change within 1h if necessary.\r\n\r\nTo increase quality, we built and provide a DevOps pipeline that currently executes 31000 Unit ABSTRACT Integration Tests per Hour as well as 60h UI Tests per Build. Our application teams are responsible end-to-end for their features and use production monitoring to validate their deployments which allows them to find 93% of bugs in production before it impacts our end users.\r\n\r\nIn this session I explain how this transformation worked from both “Top Down” as well as “Bottom Up” in our organization. A key component was the 4 people strong DevOps Team w\r\n\r\nI will also talk about the “dark moments” as change is never without friction. Both internally as well as with our customers who also had to get used to more rapid changes."
    },
    "fromTime": "16:30",
    "toTimeMillis": 1529508000000,
    "toTime": "17:20",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_wednesday_20_16h30_17h20",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529509200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>While Java has grown enormously over the years, the fundamentals have stagnated.</p>\n<p>The motivation for this talk and underlying project, was the following question: why is Java, with it’s 20 years of age, and (at least)6 billion running JVM’s not a major player in the video-game development universe?</p>\n<h5>TL;DR;</h5>\n<p>So everybody knows the Doom games, right? Every new installment brought brand new ideas, and groundbreaking graphics. But more importantly, they brought the source code of the prior installment to the public eye.</p>\n<p>Naturally people have played and hacked the code to oblivion, as much as they played the games themselves. And I have the honor to be one of those people.</p>\n<p>I (naively) endeavored to port the Doom 3 C++ code to our fantabulous Java. In doing so, I hoped to learn, among other things, more about 3D graphics.\n...what I didn't expect though, was for djoom3(cool name huh!) to teach me more about Java!?</p>\n<p>Aside from the basic game development intro, this talk focuses on the following:</p>\n<ul>\n<li>Some areas where Java should learn from it's nemesis, C++</li>\n<li>Other areas where the student(Java) becomes the master(C++)</li>\n<li>And some promises that were made, but never kept</li>\n</ul>\n",
      "id": "WYK-5892",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8289ac8fb3e8ed6d14f1aed5a1ecb3d4566bcab5",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Mahmoud Abdelghany"
          },
          "name": "Mahmoud Abdelghany"
        }
      ],
      "title": "Fallacies of Doom - Lessons learned from porting Doom 3 to Java",
      "lang": "en",
      "summary": "While Java has grown enormously over the years, the fundamentals have stagnated.\r\n\r\nThe motivation for this talk and underlying project, was the following question: why is Java, with it’s 20 years of age, and (at least)6 billion running JVM’s not a major player in the video-game development universe?\r\n\r\n#####TL;DR;\r\nSo everybody knows the Doom games, right? Every new installment brought brand new ideas, and groundbreaking graphics. But more importantly, they brought the source code of the prior installment to the public eye.\r\n\r\nNaturally people have played and hacked the code to oblivion, as much as they played the games themselves. And I have the honor to be one of those people.\r\n\r\nI (naively) endeavored to port the Doom 3 C++ code to our fantabulous Java. In doing so, I hoped to learn, among other things, more about 3D graphics.\r\n...what I didn't expect though, was for djoom3(cool name huh!) to teach me more about Java!?\r\n\r\nAside from the basic game development intro, this talk focuses on the following:\r\n\r\n- Some areas where Java should learn from it's nemesis, C++\r\n- Other areas where the student(Java) becomes the master(C++)\r\n- And some promises that were made, but never kept"
    },
    "fromTime": "17:40",
    "toTimeMillis": 1529512200000,
    "toTime": "18:30",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_wednesday_20_17h40_18h30",
    "day": "wednesday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529509200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Partially based on my own experiences I will talk about creating microservices and avoiding traps along the way. What is a distributed monolith, how is it created and how to avoid it. What are the signs of trouble and why is it not good too take to many shortcuts while thinking about architecture.</p>\n",
      "id": "AIU-2977",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/547455b2762932073532ab28dbe9495f06a86201",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Dominik Boszko"
          },
          "name": "Dominik Boszko"
        }
      ],
      "title": "Through the valley of darkness, the road to microservices",
      "lang": "en",
      "summary": "Partially based on my own experiences I will talk about creating microservices and avoiding traps along the way. What is a distributed monolith, how is it created and how to avoid it. What are the signs of trouble and why is it not good too take to many shortcuts while thinking about architecture."
    },
    "fromTime": "17:40",
    "toTimeMillis": 1529512200000,
    "toTime": "18:30",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_wednesday_20_17h40_18h30",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529509200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>When we look at the world our brain instantly turns the images we see into information, intuition and feeling. It does so with an enormous computational effort, using a network with overwhelming, unexplored architecture. We are not even close to create a machine of comparable cababilities, but step by step, improving both the hardware and algorithmic approach, we can make machine understand images they see.</p>\n<p>In this talk you will learn how to design and develop such a network. We will go from the basic machine learning concepts, through the advanced practical tips, up to using the most-recent state-of-the art architectures in practice. You will see examples on how insanely complicated problems can be solved using a portable computer. And in the meanwhile you will understand what is going on, why new layers are added and why new concept have to be introduced.</p>\n<p>While this presentation briefly introduces all the basic concepts, as we move on it quickly touches advanced and expert areas of the field.</p>\n",
      "id": "DOD-6999",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/7fefbcb624b2039a8c9f990c5c4581ca6f02491a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Krzysztof Kudrynski"
          },
          "name": "Krzysztof Kudrynski"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/2f2dae00925cf0960d4c20fcae498a50cf5e91fd",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Blazej Kubiak"
          },
          "name": "Blazej Kubiak"
        }
      ],
      "title": "Deep Learning in Computer Vision",
      "lang": "en",
      "summary": "When we look at the world our brain instantly turns the images we see into information, intuition and feeling. It does so with an enormous computational effort, using a network with overwhelming, unexplored architecture. We are not even close to create a machine of comparable cababilities, but step by step, improving both the hardware and algorithmic approach, we can make machine understand images they see. \r\n\r\nIn this talk you will learn how to design and develop such a network. We will go from the basic machine learning concepts, through the advanced practical tips, up to using the most-recent state-of-the art architectures in practice. You will see examples on how insanely complicated problems can be solved using a portable computer. And in the meanwhile you will understand what is going on, why new layers are added and why new concept have to be introduced.\r\n\r\nWhile this presentation briefly introduces all the basic concepts, as we move on it quickly touches advanced and expert areas of the field."
    },
    "fromTime": "17:40",
    "toTimeMillis": 1529512200000,
    "toTime": "18:30",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_wednesday_20_17h40_18h30",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529509200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>When we deal with continuous delivery, we often forget to take data migrations into account: this presentation describes a success case of a continuous release automation process that integrates database changes.\nWe discuss the initial technical and organizational context, and we highlight the key principles that drove this initiative, as well as the most stringent (organizational and technical) constraints we had to face.\nWe also discuss how we devised a suitable software development and release process to encompass database change automation, and the impacts on software versioning/branching models already in place.\nOur project deeply impacted all the steps and tools of a traditional software development and delivery toolchain, hence we provide some key technical details related to the tools involved in the main areas of such toolchain, namely DB automation, Continuous Integration, Source Code Management, Build and Artifact management, Chat management, Security and configuration management.\nWe conclude with key lessons learned in the process, and depict some of the most relevant (business and technical) initiatives this novel approach is unlocking for our customer right now.</p>\n",
      "id": "QLT-9881",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/eb4f9116c3c54070539533a8ffdf23a9f042ef7c",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Stefano Monti"
          },
          "name": "Stefano Monti"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/52cb35efd39c17da2c293e631915042ff678c9bb",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Luca Acquaviva"
          },
          "name": "Luca Acquaviva"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/e7deca522c2c9f9ca9abbbd06fc0acb99b953f2f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Filippo Bosi"
          },
          "name": "Filippo Bosi"
        }
      ],
      "title": "Database migrations: the missing link to continuous delivery",
      "lang": "en",
      "summary": "When we deal with continuous delivery, we often forget to take data migrations into account: this presentation describes a success case of a continuous release automation process that integrates database changes.\r\nWe discuss the initial technical and organizational context, and we highlight the key principles that drove this initiative, as well as the most stringent (organizational and technical) constraints we had to face.\r\nWe also discuss how we devised a suitable software development and release process to encompass database change automation, and the impacts on software versioning/branching models already in place.\r\nOur project deeply impacted all the steps and tools of a traditional software development and delivery toolchain, hence we provide some key technical details related to the tools involved in the main areas of such toolchain, namely DB automation, Continuous Integration, Source Code Management, Build and Artifact management, Chat management, Security and configuration management.\r\nWe conclude with key lessons learned in the process, and depict some of the most relevant (business and technical) initiatives this novel approach is unlocking for our customer right now."
    },
    "fromTime": "17:40",
    "toTimeMillis": 1529512200000,
    "toTime": "18:30",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_wednesday_20_17h40_18h30",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529509200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>Wix client is using ReactJS to generate beautiful sites. While allowing us to provide stunning websites, our loading time suffered.\nIn this lecture I will describe the journey we took to move all of our client code base to render on the server side, issues we encountered and resolved and future plans.</p>\n",
      "id": "OQK-0465",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/f66dbbfeb2961b89121375de2ed8150e31330efb",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Noam Almog"
          },
          "name": "Noam Almog"
        }
      ],
      "title": "Moving from client side rendering to server side rendering.",
      "lang": "en",
      "summary": "Wix client is using ReactJS to generate beautiful sites. While allowing us to provide stunning websites, our loading time suffered.\r\nIn this lecture I will describe the journey we took to move all of our client code base to render on the server side, issues we encountered and resolved and future plans."
    },
    "fromTime": "17:40",
    "toTimeMillis": 1529512200000,
    "toTime": "18:30",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_wednesday_20_17h40_18h30",
    "day": "wednesday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529514000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "BOF (Birds of a Feather)",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>Development of the Operating System for extraterrestrial habitats can take years of careful planning, software engineering and testing. While open source community has brought and amazing Robot Oper- ating System for robotics there’s no such solution for habitats.</p>\n<p>HabitatOS is the first and only Open Source Operating System for use in Human Spaceflight habitats. With responsive HTML interface it can be used on any device such as: desktop, mobile smartphones, tablets, TV screens and even smartwatches. It has an open and documented API for development of new features and easy to use pluggable add-on structure to build experiments around. It’s minimal require- ment is Python only, hence it could be deployed on any server easily and quick.</p>\n<p>Everything can be real-time or custom time delayed to simulate communication impediment from speed of light limit.</p>\n<p>Lunares habitat is…</p>\n<p>…a simulated space base and a research laboratory located in Pila, Poland. The hab simulates conditions that astronauts will find in a real base on the Moon or Mars. During three two-week long missions, analogue astronauts will be completely cut off from the world.</p>\n",
      "id": "YDK-9019",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/9245f9402befdc289fce4802b8fbc507cbf1fe9b",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Matt Harasymczuk"
          },
          "name": "Matt Harasymczuk"
        }
      ],
      "title": "HabitatOS and Bioastronautics research at LunAres habitat",
      "lang": "en",
      "summary": "Development of the Operating System for extraterrestrial habitats can take years of careful planning, software engineering and testing. While open source community has brought and amazing Robot Oper- ating System for robotics there’s no such solution for habitats.\r\n\r\nHabitatOS is the first and only Open Source Operating System for use in Human Spaceflight habitats. With responsive HTML interface it can be used on any device such as: desktop, mobile smartphones, tablets, TV screens and even smartwatches. It has an open and documented API for development of new features and easy to use pluggable add-on structure to build experiments around. It’s minimal require- ment is Python only, hence it could be deployed on any server easily and quick.\r\n\r\nEverything can be real-time or custom time delayed to simulate communication impediment from speed of light limit.\r\n\r\nLunares habitat is… \r\n\r\n…a simulated space base and a research laboratory located in Pila, Poland. The hab simulates conditions that astronauts will find in a real base on the Moon or Mars. During three two-week long missions, analogue astronauts will be completely cut off from the world."
    },
    "fromTime": "19:00",
    "toTimeMillis": 1529517600000,
    "toTime": "20:00",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "bof_room_3_wednesday_20_19h0_20h0",
    "day": "wednesday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529514000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "BOF (Birds of a Feather)",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Let's come and chat with speakers about their first steps at public speaking. Learn from them tips how to become good speaker.</p>\n",
      "id": "GGW-3670",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8d507a9552bae63acfe5ab281503589027e573ab",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Grzegorz Duda"
          },
          "name": "Grzegorz Duda"
        }
      ],
      "title": "So, you want to be a speaker",
      "lang": "en",
      "summary": "Let's come and chat with speakers about their first steps at public speaking. Learn from them tips how to become good speaker."
    },
    "fromTime": "19:00",
    "toTimeMillis": 1529517600000,
    "toTime": "20:00",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "bof_room_4_wednesday_20_19h0_20h0",
    "day": "wednesday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529514000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "BOF (Birds of a Feather)",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>The last few months have been very busy in the Enterprise Java space. Java EE 8 was finalized and at the same time, Oracle has announced, with the support of Red Hat and IBM, its intention to move the development of the platform to the Eclipse Foundation under the EE4J umbrella project. And with changes comes questions, a lot of questions!</p>\n<ul>\n<li>What is Jakarta EE?</li>\n<li>What is EE4J?</li>\n<li>What does it mean for Java EE?</li>\n<li>Why Eclipse?</li>\n<li>How can I contribute to EE4J?</li>\n<li>What is the EE4J timeline? ...</li>\n</ul>\n<p>During this BoF we will explain what EE4J is. We will also share the latest updates and answer any questions the audience might have.</p>\n",
      "id": "XIT-3236",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/93eb4bb9d84822a6a9e5255acedd775d6dd6c069",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Dmitry Kornilov"
          },
          "name": "Dmitry Kornilov"
        }
      ],
      "title": "Java EE, EE4J and now Jakarta EE? ",
      "lang": "en",
      "summary": "The last few months have been very busy in the Enterprise Java space. Java EE 8 was finalized and at the same time, Oracle has announced, with the support of Red Hat and IBM, its intention to move the development of the platform to the Eclipse Foundation under the EE4J umbrella project. And with changes comes questions, a lot of questions!\r\n\r\n* What is Jakarta EE? \r\n* What is EE4J?\r\n* What does it mean for Java EE?\r\n* Why Eclipse?\r\n* How can I contribute to EE4J?\r\n* What is the EE4J timeline? ...\r\n\r\nDuring this BoF we will explain what EE4J is. We will also share the latest updates and answer any questions the audience might have."
    },
    "fromTime": "19:00",
    "toTimeMillis": 1529517600000,
    "toTime": "20:00",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "bof_room_5_wednesday_20_19h0_20h0",
    "day": "wednesday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>There's a ton of theory available on DDD, event sourcing and CQRS but how does one get's started in terms of code? Moreover, when we have a tight deadline, one wants to solely focus on solving core business problems rather than getting caught up by plumbing non-functional concerns such as snapshotting, command handling, guaranteed events delivery to the right event listeners, events replaying, persisting aggregate, etc.\nIn this talk, we will build an application to see how Axon Framework supports CQRS and Event sourcing by providing a robust implementation for fundamental building blocks such as event dispatching mechanism, aggregates, repositories, event sourcing, Domain Events, etc.to build scalable, extensible and maintainable applications. Furthermore, Axon provides extensive support for Spring which means much of the configuration can be avoided by leveraging Spring's annotation support.</p>\n",
      "id": "GDP-5269",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8740996a9fa55ea6fc59cd8404de96b84862d18c",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Nakul Mishra"
          },
          "name": "Nakul Mishra"
        }
      ],
      "title": "CQRS and EventSourcing with Spring & Axon",
      "lang": "en",
      "summary": "There's a ton of theory available on DDD, event sourcing and CQRS but how does one get's started in terms of code? Moreover, when we have a tight deadline, one wants to solely focus on solving core business problems rather than getting caught up by plumbing non-functional concerns such as snapshotting, command handling, guaranteed events delivery to the right event listeners, events replaying, persisting aggregate, etc.\r\nIn this talk, we will build an application to see how Axon Framework supports CQRS and Event sourcing by providing a robust implementation for fundamental building blocks such as event dispatching mechanism, aggregates, repositories, event sourcing, Domain Events, etc.to build scalable, extensible and maintainable applications. Furthermore, Axon provides extensive support for Spring which means much of the configuration can be avoided by leveraging Spring's annotation support. "
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529567400000,
    "toTime": "09:50",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_thursday_21_9h0_9h50",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>TBD</p>\n",
      "id": "ADH-0860",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/b2c5d5c666eab1e1699b8ccc0885c86a9995737a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Adam Bien"
          },
          "name": "Adam Bien"
        }
      ],
      "title": "Lean WebApps with Skinny Miniservices #usetheplatfom",
      "lang": "en",
      "summary": "TBD"
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529567400000,
    "toTime": "09:50",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_thursday_21_9h0_9h50",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>With the rise of micro-services and large-scale distributed architectures, software systems have grow increasingly complex and hard to understand. Adding to that complexity, the velocity of software delivery has also dramatically increased, resulting in failures being harder to predict and contain.\nWhile the cloud allows for high availability, redundancy and fault-tolerance, no single component can guarantee 100% uptime. Therefore, we have to understand availability but especially learn how to design architectures with failure in mind.\nAnd since failures have become more and more chaotic in nature, we must turn to chaos engineering in order to identify failures before they become outages.\nIn this talk, I will deep dive into availability, reliability and large-scale architectures and make an introduction to chaos engineering, a discipline that promotes breaking things on purpose in order to learn how to build more resilient systems.</p>\n",
      "id": "AGG-7572",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8deefe52fa6c3127154f7d1ed296e7f3e7832fd4",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Adrian Hornsby"
          },
          "name": "Adrian Hornsby"
        }
      ],
      "title": "From availability & reliability to chaos engineering - why breaking things should be practised. ",
      "lang": "en",
      "summary": "With the rise of micro-services and large-scale distributed architectures, software systems have grow increasingly complex and hard to understand. Adding to that complexity, the velocity of software delivery has also dramatically increased, resulting in failures being harder to predict and contain. \r\nWhile the cloud allows for high availability, redundancy and fault-tolerance, no single component can guarantee 100% uptime. Therefore, we have to understand availability but especially learn how to design architectures with failure in mind.\r\nAnd since failures have become more and more chaotic in nature, we must turn to chaos engineering in order to identify failures before they become outages. \r\nIn this talk, I will deep dive into availability, reliability and large-scale architectures and make an introduction to chaos engineering, a discipline that promotes breaking things on purpose in order to learn how to build more resilient systems."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529567400000,
    "toTime": "09:50",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_thursday_21_9h0_9h50",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Business owners always dream about system that will let them change its behaviour without involving coders. This desire is event stronger in enterprises, when coders are usually in different company.\nWe’ve seen many examples: BPMN, DSLs, Drools, and many in-house samples. Big vendors and open source projects promise miracles - and usually do not deliver - or at least not to expected extent...</p>\n<p>During more than 10 years in our industry I’ve seen and taken part in many such efforts. I’d like to share my experiences - what is (almost) doomed to be a failure, what can only depend on structure of organisation and when can we expect some modest success.</p>\n<p>I also believe that the project I’m working on - Nussknacker (check it out on github) can be a bit more successful. Join me to hear about our domain (real time stream processing in telco), technologies (Kafka, Flink, React and more) our vision and architecture.</p>\n",
      "id": "FDL-6886",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/26a7e6cd4c2e83da8a19accd5cdf3d75f24777f9",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Maciej Próchniak"
          },
          "name": "Maciej Próchniak"
        }
      ],
      "title": "“Zero code” systems - hopes, myths and reality",
      "lang": "en",
      "summary": "Business owners always dream about system that will let them change its behaviour without involving coders. This desire is event stronger in enterprises, when coders are usually in different company.\r\nWe’ve seen many examples: BPMN, DSLs, Drools, and many in-house samples. Big vendors and open source projects promise miracles - and usually do not deliver - or at least not to expected extent...\r\n\r\nDuring more than 10 years in our industry I’ve seen and taken part in many such efforts. I’d like to share my experiences - what is (almost) doomed to be a failure, what can only depend on structure of organisation and when can we expect some modest success.\r\n\r\nI also believe that the project I’m working on - Nussknacker (check it out on github) can be a bit more successful. Join me to hear about our domain (real time stream processing in telco), technologies (Kafka, Flink, React and more) our vision and architecture. \r\n\r\n"
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529567400000,
    "toTime": "09:50",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_thursday_21_9h0_9h50",
    "day": "thursday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>Sometimes we are not sure if using a specific tool is a good decision or not. How many libraries are available in the market? What will become standard? And, what is just a hype?</p>\n<p>PWA sounds like a new framework, or a tool to create some sort of web apps. Many developers link it to JavaScript, and that is only achievable with one of those new framework.js out there.</p>\n<p>I’ve been wondering about the truth of this previous statement, can we create a PWA in, let’s say, pure Java? I did some research and I’m going to present my findings.</p>\n<p>In this presentation I will demonstrate how we can actually build modern web applications that qualify as \"Progressive Web Apps\".</p>\n",
      "id": "AYX-5817",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/5bf7fee4187f2cf18cae2f0d72e745c357b603e1",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "AMahdy Abdelaziz"
          },
          "name": "AMahdy Abdelaziz"
        }
      ],
      "title": "Dismantling a Progressive Web App",
      "lang": "en",
      "summary": "Sometimes we are not sure if using a specific tool is a good decision or not. How many libraries are available in the market? What will become standard? And, what is just a hype?\r\n\r\nPWA sounds like a new framework, or a tool to create some sort of web apps. Many developers link it to JavaScript, and that is only achievable with one of those new framework.js out there.\r\n\r\nI’ve been wondering about the truth of this previous statement, can we create a PWA in, let’s say, pure Java? I did some research and I’m going to present my findings.\r\n\r\nIn this presentation I will demonstrate how we can actually build modern web applications that qualify as \"Progressive Web Apps\"."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529567400000,
    "toTime": "09:50",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_thursday_21_9h0_9h50",
    "day": "thursday"
  },
  {
    "roomId": "x_lab_room1",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "architecture",
      "talkType": "Hands-on Labs",
      "track": "Architecture",
      "summaryAsHtml": "<p>Before spending substantial effort in refactoring or altering design, it would be prudent to evaluate the current quality of design. This can help us decide if we should proceed with refactoring effort or a particular alteration of design. Furthermore, after evolving a design, using some design metrics would help us to evaluate if we have improved on the design front. In this workshop we will learn about some critical qualities of design and how to measure those. We will learn about these by working through some example code, refactoring it, and evaluating the design again at each stage of refactoring.</p>\n",
      "id": "XOY-5611",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c6165005b41678c48c2d107076ac7ac88a067f5a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Venkat Subramaniam"
          },
          "name": "Venkat Subramaniam"
        }
      ],
      "title": "Measuring Quality of design",
      "lang": "en",
      "summary": "Before spending substantial effort in refactoring or altering design, it would be prudent to evaluate the current quality of design. This can help us decide if we should proceed with refactoring effort or a particular alteration of design. Furthermore, after evolving a design, using some design metrics would help us to evaluate if we have improved on the design front. In this workshop we will learn about some critical qualities of design and how to measure those. We will learn about these by working through some example code, refactoring it, and evaluating the design again at each stage of refactoring."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529575200000,
    "toTime": "12:00",
    "roomCapacity": 50,
    "roomName": "Lab Room A",
    "slotId": "lab_x_lab_room1_thursday_21_9h0_12h0",
    "day": "thursday"
  },
  {
    "roomId": "x_lab_room2",
    "notAllocated": false,
    "fromTimeMillis": 1529564400000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "cloud",
      "talkType": "Hands-on Labs",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>You are a developer with Java EE experience who is considering implementing microservices architecture? This talk is for you. I am going to introduce you to the number of tools that will enable you to build microservices using proven Jave EE technologies. You are going to learn how to build microservices using WildFly Swarm, how to deploy them in the cloud with OpenShift and how to secure them using Keycloak. This talk will complement your knowledge with practical information which you can immediately use in your applications.</p>\n",
      "id": "PQY-2725",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/008c1bbc24680f71fa6926ea21cc8c5423089865",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tomasz Adamski"
          },
          "name": "Tomasz Adamski"
        }
      ],
      "title": "Java EE microservices with WildFly Swarm an OpenShift",
      "lang": "en",
      "summary": "You are a developer with Java EE experience who is considering implementing microservices architecture? This talk is for you. I am going to introduce you to the number of tools that will enable you to build microservices using proven Jave EE technologies. You are going to learn how to build microservices using WildFly Swarm, how to deploy them in the cloud with OpenShift and how to secure them using Keycloak. This talk will complement your knowledge with practical information which you can immediately use in your applications."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529575200000,
    "toTime": "12:00",
    "roomCapacity": 50,
    "roomName": "Lab Room B",
    "slotId": "lab_x_lab_room2_thursday_21_9h0_12h0",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529569200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>I’ve been using TDD/BDD at work for the last 12 years, I also teach and mentor teams on this subject. I’ve found that misconceptions and errors in this field are shared, and that most of us make the same mistakes. Give me 45 minutes of your time, and I’ll try to address the most common problems, hoping to improve your TDD/BDD situation as much as possible.</p>\n<p>I’ll try to solve:</p>\n<p>Long running tests problem, by bringing back the correct shape of test-pyramid with power of Hexagonal Architecture (Ports &amp; Adapters) with practical examples in Spring.</p>\n<p>Miscommunication and lost art of requirement gathering, by focusing on readability, introducing just enough of Domain Specific Language, and sorting out what is important with the power of Spock.</p>\n<p>Difficult test setup and environment requirements, by using command and conquer, modularity, monitoring.</p>\n<p>Mock abuse, by showing what are the benefits of in-memory implementations.</p>\n<p>And hopefully more.</p>\n<p>Most teams that do not write tests first do it, because it’s hard for them. I’ll try to show you, how to make it easy. Real life examples included.</p>\n<p>If you are not using TDD/BDD, this might also interest you - you’ll know how to start the right way.</p>\n",
      "id": "AFG-6827",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/336ea64dfcd4f08def5230a4b4c4013f1e242c7f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jakub Nabrdalik"
          },
          "name": "Jakub Nabrdalik"
        }
      ],
      "title": "Improving your Test Driven Development in 45 minutes.",
      "lang": "en",
      "summary": "I’ve been using TDD/BDD at work for the last 12 years, I also teach and mentor teams on this subject. I’ve found that misconceptions and errors in this field are shared, and that most of us make the same mistakes. Give me 45 minutes of your time, and I’ll try to address the most common problems, hoping to improve your TDD/BDD situation as much as possible.\r\n\r\nI’ll try to solve:\r\n\r\nLong running tests problem, by bringing back the correct shape of test-pyramid with power of Hexagonal Architecture (Ports & Adapters) with practical examples in Spring.\r\n\r\nMiscommunication and lost art of requirement gathering, by focusing on readability, introducing just enough of Domain Specific Language, and sorting out what is important with the power of Spock.\r\n\r\nDifficult test setup and environment requirements, by using command and conquer, modularity, monitoring.\r\n\r\nMock abuse, by showing what are the benefits of in-memory implementations.\r\n\r\nAnd hopefully more.\r\n\r\nMost teams that do not write tests first do it, because it’s hard for them. I’ll try to show you, how to make it easy. Real life examples included.\r\n\r\nIf you are not using TDD/BDD, this might also interest you - you’ll know how to start the right way."
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529572200000,
    "toTime": "11:10",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_thursday_21_10h20_11h10",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529569200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>AI and machine learning are driving a revolution in text analytics that could be a game-changer for the way people interact with brands and employers. In this session, we will explore the latest developments on topic detection and sentiment analysis at Qualtrics and how we are using them to develop advanced text analytics.</p>\n<p>The talk is open to audience of all levels. We will briefly introduce word embedding first, which is the basic building block for many of the recent neural network models. And then for topic detection and sentiment analysis, we will discuss in high level about some of the popular neural network based models targeting these two tasks, and the learnings from productizing these research models for real-life problems.</p>\n",
      "id": "IXP-1218",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/9df5684e1999a2b809c98a408a0715ef5c9a7b02",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Yue Ning"
          },
          "name": "Yue Ning"
        }
      ],
      "title": "NLP in Feedback Analysis",
      "lang": "en",
      "summary": "AI and machine learning are driving a revolution in text analytics that could be a game-changer for the way people interact with brands and employers. In this session, we will explore the latest developments on topic detection and sentiment analysis at Qualtrics and how we are using them to develop advanced text analytics. \r\n\r\nThe talk is open to audience of all levels. We will briefly introduce word embedding first, which is the basic building block for many of the recent neural network models. And then for topic detection and sentiment analysis, we will discuss in high level about some of the popular neural network based models targeting these two tasks, and the learnings from productizing these research models for real-life problems."
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529572200000,
    "toTime": "11:10",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_thursday_21_10h20_11h10",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529569200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Building distributed systems is notoriously hard... building a distributed team, even more so. At Elastic — the company behind the open source tools Elasticsearch, Kibana, Beats, and Logstash — everything is distributed; the company and our products. This talk dives into the details of how Elastic is thriving on its distributed model:</p>\n<ul>\n<li>How Elastic started to be distributed by design.</li>\n<li>What our shared values are and what we have learned as we progressed and grew to our current size.</li>\n<li>What the day of an Elastician can look like.</li>\n<li>What we are using in terms of tooling.</li>\n<li>How we hire and onboard new employees.</li>\n</ul>\n",
      "id": "NSK-5448",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/03d2cc530c2216381a06c32f1e64b82445bccf88",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Philipp Krenn"
          },
          "name": "Philipp Krenn"
        }
      ],
      "title": "Building Distributed Systems in Distributed Teams",
      "lang": "en",
      "summary": "Building distributed systems is notoriously hard... building a distributed team, even more so. At Elastic — the company behind the open source tools Elasticsearch, Kibana, Beats, and Logstash — everything is distributed; the company and our products. This talk dives into the details of how Elastic is thriving on its distributed model:\r\n\r\n* How Elastic started to be distributed by design.\r\n* What our shared values are and what we have learned as we progressed and grew to our current size.\r\n* What the day of an Elastician can look like.\r\n* What we are using in terms of tooling.\r\n* How we hire and onboard new employees."
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529572200000,
    "toTime": "11:10",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_thursday_21_10h20_11h10",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529569200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "Conference",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>I will share some experience on writing a software to play the game of Go in Kotlin.\nThe game of Go is born in China more than 2000 years ago and despite its very simple rules is considered more complex than chess and so one of the most interesting from a software developer point of view. Until 2018 when AlphaGo beated the world champion, it was considered the humanity's last stand.\nI'll present a didactic go bot engine I developed in Kotlin. It's very simple but it is already able to give interesting matches.</p>\n",
      "id": "LTB-2959",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/482e95cd19e7034009b1a34575a629428f545024",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Uberto Barbini"
          },
          "name": "Uberto Barbini"
        }
      ],
      "title": "Go Kotlin Go!",
      "lang": "en",
      "summary": "I will share some experience on writing a software to play the game of Go in Kotlin.\r\nThe game of Go is born in China more than 2000 years ago and despite its very simple rules is considered more complex than chess and so one of the most interesting from a software developer point of view. Until 2018 when AlphaGo beated the world champion, it was considered the humanity's last stand.\r\nI'll present a didactic go bot engine I developed in Kotlin. It's very simple but it is already able to give interesting matches.\r\n"
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529572200000,
    "toTime": "11:10",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_thursday_21_10h20_11h10",
    "day": "thursday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529569200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Moving an organization towards higher agility is a many stepped process. Tomek will take you on a board-game journey to show the levels they have advanced through at Ocado Technology to achieve better people engagement.</p>\n<p>Level1: Team interview\nLevel2: Knowing your business\nLevel3: Teams are everywhere\nLevel4: Autonomy\nLevel5: Open culture</p>\n",
      "id": "XBR-1328",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/9ddd5bef98400101c743c9fc712be73c43b9bf15",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tomasz Dubikowski"
          },
          "name": "Tomasz Dubikowski"
        }
      ],
      "title": "Level-up your culture",
      "lang": "en",
      "summary": "Moving an organization towards higher agility is a many stepped process. Tomek will take you on a board-game journey to show the levels they have advanced through at Ocado Technology to achieve better people engagement. \r\n\r\nLevel1: Team interview \r\nLevel2: Knowing your business \r\nLevel3: Teams are everywhere \r\nLevel4: Autonomy \r\nLevel5: Open culture"
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529572200000,
    "toTime": "11:10",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_thursday_21_10h20_11h10",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529573400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Microservices promise a scalable architecture, increased flexibility, and better performance. But then you find out what’s actually involved in designing and running a microservices-based architecture. Turns out it’s not that straightforward after all.</p>\n<p>Often the discussion around microservices is framed by a false dichotomy between the messy monolith and the lean and mean microservices architecture. Fortunately, there’s a third way: the modularized application. Functional decomposition doesn’t imply that every component has to become its own independent process.</p>\n<p>Modularization is about strong encapsulation, well-defined interfaces, and explicit dependencies. Many languages offer in-process modularization features (for example, Java with its all-new module system). In this session we explore the right (and wrong) reasons for going with a microservices architecture, as well as what a modularized application entails. There’s a place for both independently deployed microservices and larger applications with a strong internal modular structure. Choose wisely.</p>\n",
      "id": "MEV-9010",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/4e9e5d5e37a294088238cf0b3d16758ee7eba01f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Sander Mak"
          },
          "name": "Sander Mak"
        }
      ],
      "title": "Modules or Microservices?",
      "lang": "en",
      "summary": "Microservices promise a scalable architecture, increased flexibility, and better performance. But then you find out what’s actually involved in designing and running a microservices-based architecture. Turns out it’s not that straightforward after all.\r\n\r\nOften the discussion around microservices is framed by a false dichotomy between the messy monolith and the lean and mean microservices architecture. Fortunately, there’s a third way: the modularized application. Functional decomposition doesn’t imply that every component has to become its own independent process.\r\n\r\nModularization is about strong encapsulation, well-defined interfaces, and explicit dependencies. Many languages offer in-process modularization features (for example, Java with its all-new module system). In this session we explore the right (and wrong) reasons for going with a microservices architecture, as well as what a modularized application entails. There’s a place for both independently deployed microservices and larger applications with a strong internal modular structure. Choose wisely."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529576400000,
    "toTime": "12:20",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_thursday_21_11h30_12h20",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529573400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>As developers we build on the shoulders of giants - using APIs developed by others to propel ourselves further forward. We often find ourselves in the position where we must provide our own APIs for other developers to use. Building a Java API is not without perils -we must know the features of the language extremely well, we must understand the implications of breaking compatibility, we must own many other responsibilities such as creating excellent documentation, and most importantly, we must practice restraint.</p>\n<p>This session will give an introduction to developers on how they should develop their own APIs, whether it be for internal use, an open source project, or a commercial library. The focus is purely on building Java APIs, not REST APIs or anything else! Jonathan has over 10 years experience building Java APIs, firstly at Sun Microsystems and Oracle in the Java team working on Java releases 7, 8, 9, and 10, and more recently he has joined Microsoft as a cloud developer advocate, where he works closely with the engineering teams to improve the Java API offering for Azure.</p>\n<p>This session will work through tips that developers should follow, and advice for developers to avoid.</p>\n",
      "id": "JUK-7802",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/94efa202dc45c9a36c88afb622ea959224132f82",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jonathan Giles"
          },
          "name": "Jonathan Giles"
        }
      ],
      "title": "The art of building Java APIs: Do's and Don'ts",
      "lang": "en",
      "summary": "As developers we build on the shoulders of giants - using APIs developed by others to propel ourselves further forward. We often find ourselves in the position where we must provide our own APIs for other developers to use. Building a Java API is not without perils -we must know the features of the language extremely well, we must understand the implications of breaking compatibility, we must own many other responsibilities such as creating excellent documentation, and most importantly, we must practice restraint.\r\n\r\nThis session will give an introduction to developers on how they should develop their own APIs, whether it be for internal use, an open source project, or a commercial library. The focus is purely on building Java APIs, not REST APIs or anything else! Jonathan has over 10 years experience building Java APIs, firstly at Sun Microsystems and Oracle in the Java team working on Java releases 7, 8, 9, and 10, and more recently he has joined Microsoft as a cloud developer advocate, where he works closely with the engineering teams to improve the Java API offering for Azure.\r\n\r\nThis session will work through tips that developers should follow, and advice for developers to avoid."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529576400000,
    "toTime": "12:20",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_thursday_21_11h30_12h20",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529573400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>Starting Java 8, the main focus of many developers was on Functional Programming in Java including Streams, Optional, and Functional Interfaces. However, there were more amazing features introduced along the way which has changed Java programming. One of such features was CompletableFuture which is continuously being improved in Java 9 (JEP 266).\nAs Concurrency in Java is generally a complicated topic where many had a difficult time switching to ThreadLocal from regular Threads, the idea of Future and CompletableFuture which refers to asynchronous computations is even more difficult.\nIn this talk, the speaker will attempt to make asynchronous programming using Java 8/9 more compelling by approaching the topic with clear examples and references to other languages. One example of a language heavily relying on asynchronous tasks is JavaScript. Using some of the conceptual similarities of two languages in regards to asynchronous programming, this talk will cover how Future/CompletableFuture can be used in a safe and a programmer friendly way.</p>\n",
      "id": "LQE-8122",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/41e103cba7a33e648359a941e2f4a76da5aa9022",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Dmitry Vinnik"
          },
          "name": "Dmitry Vinnik"
        }
      ],
      "title": "Back to the CompletableFuture: Concurrency in Action",
      "lang": "en",
      "summary": "   Starting Java 8, the main focus of many developers was on Functional Programming in Java including Streams, Optional, and Functional Interfaces. However, there were more amazing features introduced along the way which has changed Java programming. One of such features was CompletableFuture which is continuously being improved in Java 9 (JEP 266).\r\n        \tAs Concurrency in Java is generally a complicated topic where many had a difficult time switching to ThreadLocal from regular Threads, the idea of Future and CompletableFuture which refers to asynchronous computations is even more difficult.\r\n        \tIn this talk, the speaker will attempt to make asynchronous programming using Java 8/9 more compelling by approaching the topic with clear examples and references to other languages. One example of a language heavily relying on asynchronous tasks is JavaScript. Using some of the conceptual similarities of two languages in regards to asynchronous programming, this talk will cover how Future/CompletableFuture can be used in a safe and a programmer friendly way."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529576400000,
    "toTime": "12:20",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_thursday_21_11h30_12h20",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529573400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Is your legacy application talking to a service that is never up and running on your shared testing environment? Does your company waste a lot of time and money on regression testing only to see that, yet again, someone has created a typo in the API? Enough is enough. Time to fix this problem using contract tests!</p>\n<p>In this presentation you’ll see how to migrate a legacy application to work with stubs of external applications. We’ll show different ways of increasing your test reliability by writing adding contract tests of your API. You’ll see the difference between producer and consumer driven contracts.</p>\n",
      "id": "WQN-7634",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/1412a670111b4cdba6a49dd7064ba6dfd99ddc47",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Marcin Grzejszczak"
          },
          "name": "Marcin Grzejszczak"
        }
      ],
      "title": "Contract Tests in the Enterprise",
      "lang": "en",
      "summary": "Is your legacy application talking to a service that is never up and running on your shared testing environment? Does your company waste a lot of time and money on regression testing only to see that, yet again, someone has created a typo in the API? Enough is enough. Time to fix this problem using contract tests!\r\n\r\nIn this presentation you’ll see how to migrate a legacy application to work with stubs of external applications. We’ll show different ways of increasing your test reliability by writing adding contract tests of your API. You’ll see the difference between producer and consumer driven contracts."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529576400000,
    "toTime": "12:20",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_thursday_21_11h30_12h20",
    "day": "thursday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529573400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "Conference",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>Bitcoin and the underlying technology Blockchain are probably among the most significant inventions in at least this decade. There are multiple advantages of Bitcoin - it’s secure, independent and self-regulating distributed network that allows transferring value outside the banking system and without the need of trusted third-parties.\nBut there is also one serious problem with Bitcoin - scalability. Current Bitcoin's peak transaction capacity is just about 20 transactions per second. Just twenty compared to tens of thousands that for example Visa can handle. Is this all that the fastest computer network with electricity consumption similar to mid-size countries can do?\nBitcoin developers figured out the solution for that - the concept called Lightning Network (LN) that will allow to scale Bitcoin network to capacity of millions to billions of transactions per second.\nWhat is probably the most important - this concept is not just a concept anymore: few different, compatible implementations are already working on Bitcoin test network (testnet). The LN concept is also not just Bitcoin-specific - it can be implemented over other blockchains, designed for other purposes too.</p>\n",
      "id": "THG-7353",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/ffe7be245b63b798fc26deff09e5b7f8fb443a36",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tomasz Konieczny"
          },
          "name": "Tomasz Konieczny"
        }
      ],
      "title": "Blockchain scaling - Lightning Network",
      "lang": "en",
      "summary": "Bitcoin and the underlying technology Blockchain are probably among the most significant inventions in at least this decade. There are multiple advantages of Bitcoin - it’s secure, independent and self-regulating distributed network that allows transferring value outside the banking system and without the need of trusted third-parties.\r\nBut there is also one serious problem with Bitcoin - scalability. Current Bitcoin's peak transaction capacity is just about 20 transactions per second. Just twenty compared to tens of thousands that for example Visa can handle. Is this all that the fastest computer network with electricity consumption similar to mid-size countries can do?\r\nBitcoin developers figured out the solution for that - the concept called Lightning Network (LN) that will allow to scale Bitcoin network to capacity of millions to billions of transactions per second.\r\nWhat is probably the most important - this concept is not just a concept anymore: few different, compatible implementations are already working on Bitcoin test network (testnet). The LN concept is also not just Bitcoin-specific - it can be implemented over other blockchains, designed for other purposes too."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529576400000,
    "toTime": "12:20",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_thursday_21_11h30_12h20",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529578200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Quickie Sessions",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>Many top-notch projects, like Docker, kubernetes, InfluxDB are written in Go. Have you ever wondered why?  Why architects, CTO have decided to choose Go? During my presentation I will show the most appreciated features of the language.</p>\n",
      "id": "IOM-4874",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/bf4781fc42b93fe9c904d086b1c5184816d5d715",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Adam Szecówka"
          },
          "name": "Adam Szecówka"
        }
      ],
      "title": "Why Go?",
      "lang": "en",
      "summary": "Many top-notch projects, like Docker, kubernetes, InfluxDB are written in Go. Have you ever wondered why?  Why architects, CTO have decided to choose Go? During my presentation I will show the most appreciated features of the language."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529579100000,
    "toTime": "13:05",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "quick_room_2_thursday_21_12h50_13h5",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529578200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "security",
      "talkType": "Quickie Sessions",
      "track": "Security",
      "summaryAsHtml": "<p>New systems are always interesting targets since their security model couldn’t mature yet. NoSQL databases are no exception and had some bad press about their security, but how does their protection actually look like? We will take a look at three widely used systems and their unique approaches:</p>\n<ul>\n<li>MongoDB: Widely criticized for publicly accessible databases and a common victim of ransomware. Actually, it provides an elaborate authentication and authorization system, which we will cover from a historic perspective and put an emphasis on the current state.</li>\n<li>Redis: Security through obscurity or how you can rename commands. And it features a unique tradeoff for binding to publicly accessible interfaces.</li>\n<li>Elasticsearch: Groovy scripting has been a constant headache, but the new, custom-built scripting language Painless tries to take the pain away literally.</li>\n</ul>\n",
      "id": "VBI-7045",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/03d2cc530c2216381a06c32f1e64b82445bccf88",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Philipp Krenn"
          },
          "name": "Philipp Krenn"
        }
      ],
      "title": "NoSQL Means No Security?",
      "lang": "en",
      "summary": "New systems are always interesting targets since their security model couldn’t mature yet. NoSQL databases are no exception and had some bad press about their security, but how does their protection actually look like? We will take a look at three widely used systems and their unique approaches:\r\n\r\n* MongoDB: Widely criticized for publicly accessible databases and a common victim of ransomware. Actually, it provides an elaborate authentication and authorization system, which we will cover from a historic perspective and put an emphasis on the current state.\r\n* Redis: Security through obscurity or how you can rename commands. And it features a unique tradeoff for binding to publicly accessible interfaces.\r\n* Elasticsearch: Groovy scripting has been a constant headache, but the new, custom-built scripting language Painless tries to take the pain away literally."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529579100000,
    "toTime": "13:05",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "quick_room_3_thursday_21_12h50_13h5",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529578200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Quickie Sessions",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>Two years ago we helped to introduce Apache Flink in one of the biggest mobile operators in Poland - at first to help with real time marketing. The data used included information from billing and signalling systems. We wanted to enable analysts and semi-technical people to create and monitor processes and that’s how Nussknacker - our open source GUI for Flink was born.</p>\n<p>Today we’re processing billions of events daily from more than dozen of sources with > 40 processes running in production.\nMost of those jobs are created by analysts, without the need of developers assistance. We use our cluster not only for marketing but also fraud detection.</p>\n<p>I'll show how we achieved that - I'll briefly describe our use case and architecture, and then show short demo of Nussknacker.</p>\n",
      "id": "SBA-2006",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/26a7e6cd4c2e83da8a19accd5cdf3d75f24777f9",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Maciej Próchniak"
          },
          "name": "Maciej Próchniak"
        }
      ],
      "title": "Stream processing in telco with Apache Flink & TouK Nussknacker",
      "lang": "en",
      "summary": "Two years ago we helped to introduce Apache Flink in one of the biggest mobile operators in Poland - at first to help with real time marketing. The data used included information from billing and signalling systems. We wanted to enable analysts and semi-technical people to create and monitor processes and that’s how Nussknacker - our open source GUI for Flink was born.\r\n \r\nToday we’re processing billions of events daily from more than dozen of sources with > 40 processes running in production.\r\nMost of those jobs are created by analysts, without the need of developers assistance. We use our cluster not only for marketing but also fraud detection. \r\n\r\nI'll show how we achieved that - I'll briefly describe our use case and architecture, and then show short demo of Nussknacker."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529579100000,
    "toTime": "13:05",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "quick_room_4_thursday_21_12h50_13h5",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Conference",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>Languages offer a lot more than syntax and compilers. They often have supporting libraries and special facilities that set them apart from other languages. Some languages offer special compiler support for a particular construct, like tail call optimization, for example. Others provide interesting library support or capabilities. In this presentation we will dive into 12 cool things we can do with different languages on the JVM, things that are either impossible or hard to do in Java, but are quite easy and useful to realize in other popular languages on the JVM. If mixing these languages is an option on your projects, you'll have dozen more reasons after this presentation.</p>\n",
      "id": "LOQ-7404",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c6165005b41678c48c2d107076ac7ac88a067f5a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Venkat Subramaniam"
          },
          "name": "Venkat Subramaniam"
        }
      ],
      "title": "A dozen cool things we can do with popular JVM Languages",
      "lang": "en",
      "summary": "Languages offer a lot more than syntax and compilers. They often have supporting libraries and special facilities that set them apart from other languages. Some languages offer special compiler support for a particular construct, like tail call optimization, for example. Others provide interesting library support or capabilities. In this presentation we will dive into 12 cool things we can do with different languages on the JVM, things that are either impossible or hard to do in Java, but are quite easy and useful to realize in other popular languages on the JVM. If mixing these languages is an option on your projects, you'll have dozen more reasons after this presentation."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529583000000,
    "toTime": "14:10",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_thursday_21_13h20_14h10",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>Ahh, reactive, probably the buzzword of 2018, newer and shinier than good ol' microservices, all asynchronous, non-blocking and I've even heard some event-driven buzz around it.\nDuring this live-coding session we won't focus on the shiny nor on saving the world with dataflows using composable operators.\nInstead we'll focus on how the execution of this reactive approach differs from 'classic imperative approaches' and check how it impacts resource consumption.\nWe'll also see backpressure in action, cover the topic of data serialization and talk about event loops.</p>\n",
      "id": "FXQ-8641",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/93e77c11a405a88f5baf993d09c4ecafea9911d4",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Kamil Szymański"
          },
          "name": "Kamil Szymański"
        }
      ],
      "title": "Reactive web services",
      "lang": "en",
      "summary": "Ahh, reactive, probably the buzzword of 2018, newer and shinier than good ol' microservices, all asynchronous, non-blocking and I've even heard some event-driven buzz around it.\r\nDuring this live-coding session we won't focus on the shiny nor on saving the world with dataflows using composable operators.\r\nInstead we'll focus on how the execution of this reactive approach differs from 'classic imperative approaches' and check how it impacts resource consumption.\r\nWe'll also see backpressure in action, cover the topic of data serialization and talk about event loops."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529583000000,
    "toTime": "14:10",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_thursday_21_13h20_14h10",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "Conference",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>Quantum computing has existed as a theoretical concept for some time. I recently saw some talks on quantum computing and I’ve been inspired to start researching the field myself. There are now a handful of (known) quantum computers in existence, some of which, such as the “IBM Q Experience” allow you to execute real quantum programs. I’ll give an overview of the state of the art, what the potential of quantum computing is, what its limitations might be and a small dose of speculation on what applications could be suited to to quantum computers and when they might start to be really useful.</p>\n<p>I’ve also designed a demonstration of Quantum Computing, using Microsoft’s Q# (not a real quantum computer, it is a simulator designed to run on a traditional digital computer) called “Clementine’s Cat”. I was inspired to make Clementine’s Cat when I described Shrodinger’s Cat to my daughter and she was horified that anybody would do such a thing to their cat. So Clementine’s Cat is a humane modern spin on the traditional quantum thought experiment in which no cats are harmed, either theoretically or in reality.</p>\n",
      "id": "CTQ-8688",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c7e11c65000b87ef448dba256e9dac485e08228a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "James Birnie"
          },
          "name": "James Birnie"
        }
      ],
      "title": "Is Quantum Computing Really a Thing?",
      "lang": "en",
      "summary": "Quantum computing has existed as a theoretical concept for some time. I recently saw some talks on quantum computing and I’ve been inspired to start researching the field myself. There are now a handful of (known) quantum computers in existence, some of which, such as the “IBM Q Experience” allow you to execute real quantum programs. I’ll give an overview of the state of the art, what the potential of quantum computing is, what its limitations might be and a small dose of speculation on what applications could be suited to to quantum computers and when they might start to be really useful.\r\n\r\nI’ve also designed a demonstration of Quantum Computing, using Microsoft’s Q# (not a real quantum computer, it is a simulator designed to run on a traditional digital computer) called “Clementine’s Cat”. I was inspired to make Clementine’s Cat when I described Shrodinger’s Cat to my daughter and she was horified that anybody would do such a thing to their cat. So Clementine’s Cat is a humane modern spin on the traditional quantum thought experiment in which no cats are harmed, either theoretically or in reality."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529583000000,
    "toTime": "14:10",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_thursday_21_13h20_14h10",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>3DSecure is an important add-on for online user authentication offered by many banks, which provides an extra layer of security for online transactions. Like many security measures, the most popular implementation of 3DSecure (i.e. enter the Xth, Yth, Zth letter of another password) obstructs users from their end goal of paying for something. When it was time for us to implement it, we knew it had to look, feel and function in the N26 way. This meant a mobile-first experience that fits in with the intuitive behaviour that our users expect and are proud of.</p>\n<p>In this talk we will explore how 3DSecure works, including why it is the most up-to-date fraud prevention method in the world today. We will look at how we implemented the 3DS Mastercard SecureCode protocol with safety and user-experience as priorities and introduce our proprietary risk-model that uses machine learning to assess every online transaction made with N26.</p>\n",
      "id": "UNJ-4157",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/1d96f59d80b0a541c7ad1df676ff951c4483a6cb",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Alina Denisenko"
          },
          "name": "Alina Denisenko"
        }
      ],
      "title": "A mobile-first approach to 3DSecure today",
      "lang": "en",
      "summary": "3DSecure is an important add-on for online user authentication offered by many banks, which provides an extra layer of security for online transactions. Like many security measures, the most popular implementation of 3DSecure (i.e. enter the Xth, Yth, Zth letter of another password) obstructs users from their end goal of paying for something. When it was time for us to implement it, we knew it had to look, feel and function in the N26 way. This meant a mobile-first experience that fits in with the intuitive behaviour that our users expect and are proud of.\r\n\r\nIn this talk we will explore how 3DSecure works, including why it is the most up-to-date fraud prevention method in the world today. We will look at how we implemented the 3DS Mastercard SecureCode protocol with safety and user-experience as priorities and introduce our proprietary risk-model that uses machine learning to assess every online transaction made with N26."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529583000000,
    "toTime": "14:10",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_thursday_21_13h20_14h10",
    "day": "thursday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Most of the teams are still in a never-ending quest for the documentation sweet spot. The place that you don’t have spend too much time maintaining it, yet it brings a lot of value and is up to date.</p>\n<p>For some the starting point was from agile manifesto or software craftsmanship misunderstanding, which is not-documenting at all. Others decided to build a comprehensive documentation, soon to discover it is a challenge to keep it up with the reality (which is the code).</p>\n<p>There is a better way to build a good Developer Experience. I will share several options, that you may take advantage of, including:</p>\n<ul>\n<li>partially executable documentation without (non-docstring)</li>\n<li>human- and machine-readable HTTP API documentation</li>\n<li>automated tests as documentation</li>\n</ul>\n",
      "id": "OKO-7503",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/49f60c506ffaf0546c01527d4c7ed8d10bce7702",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Wojtek Erbetowski"
          },
          "name": "Wojtek Erbetowski"
        }
      ],
      "title": "Docs in the self-documenting world",
      "lang": "en",
      "summary": "Most of the teams are still in a never-ending quest for the documentation sweet spot. The place that you don’t have spend too much time maintaining it, yet it brings a lot of value and is up to date.\r\n\r\nFor some the starting point was from agile manifesto or software craftsmanship misunderstanding, which is not-documenting at all. Others decided to build a comprehensive documentation, soon to discover it is a challenge to keep it up with the reality (which is the code).\r\n\r\nThere is a better way to build a good Developer Experience. I will share several options, that you may take advantage of, including:\r\n\r\n- partially executable documentation without (non-docstring)\r\n- human- and machine-readable HTTP API documentation\r\n- automated tests as documentation\r\n"
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529583000000,
    "toTime": "14:10",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_thursday_21_13h20_14h10",
    "day": "thursday"
  },
  {
    "roomId": "x_lab_room1",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "security",
      "talkType": "Hands-on Labs",
      "track": "Security",
      "summaryAsHtml": "<p>A good defense against insecure code requires understanding the mechanics behind how attackers exploit simple programming mistakes.\nThe WebGoat team will walk through exercises like SQL Injection, XSS, XXE, CSRF, ... and demonstrate how these exploits work.\n \nWe will show you how you can use WebGoat to train your developers to avoid these simple but common programming mistakes.\n \nWe also show you how to extend WebGoat to create lessons specific to your environment.\nJoin us to learn the most basic, but common, application security problems.</p>\n<p>Tired of all the lessons? During the training we will host a small CTF competition which you can take a shot at and compete with each other...</p>\n",
      "id": "IEL-7393",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/aa132925145af4c0a65efa5adf1f7a569ade1e37",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Nanne Baars"
          },
          "name": "Nanne Baars"
        }
      ],
      "title": "WebGoat - Teaching application security 101",
      "lang": "en",
      "summary": "A good defense against insecure code requires understanding the mechanics behind how attackers exploit simple programming mistakes.\r\nThe WebGoat team will walk through exercises like SQL Injection, XSS, XXE, CSRF, ... and demonstrate how these exploits work.\r\n \r\nWe will show you how you can use WebGoat to train your developers to avoid these simple but common programming mistakes.\r\n \r\nWe also show you how to extend WebGoat to create lessons specific to your environment.\r\nJoin us to learn the most basic, but common, application security problems.\r\n\r\nTired of all the lessons? During the training we will host a small CTF competition which you can take a shot at and compete with each other..."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 50,
    "roomName": "Lab Room A",
    "slotId": "lab_x_lab_room1_thursday_21_13h20_15h20",
    "day": "thursday"
  },
  {
    "roomId": "x_lab_room2",
    "notAllocated": false,
    "fromTimeMillis": 1529580000000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "java",
      "talkType": "Hands-on Labs",
      "track": "Java Language",
      "summaryAsHtml": "<p>Java 9 comes with a standard module system called JPMS (JSR 376 - the Java Platform Module System) for the Java platform which is one of the most anticipated features in Java Platform's history. JPMS is designed under and the core part of the Project Jigsaw along with several features such as JLink (The Java Linker), Encapsulate Most Internal APIs, Modular Source Code, HTTP/2 and WebSocket API, and Modular Runtime Images. In this Hands-on Lab session, you will learn this new features with step by step manner.</p>\n",
      "id": "SGP-9925",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/7eb7515ac1beae6d8f32223147a64a206ab71214",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Rahman Usta"
          },
          "name": "Rahman Usta"
        }
      ],
      "title": "Practicing the Java 9 Module System",
      "lang": "en",
      "summary": "Java 9 comes with a standard module system called JPMS (JSR 376 - the Java Platform Module System) for the Java platform which is one of the most anticipated features in Java Platform's history. JPMS is designed under and the core part of the Project Jigsaw along with several features such as JLink (The Java Linker), Encapsulate Most Internal APIs, Modular Source Code, HTTP/2 and WebSocket API, and Modular Runtime Images. In this Hands-on Lab session, you will learn this new features with step by step manner."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 50,
    "roomName": "Lab Room B",
    "slotId": "lab_x_lab_room2_thursday_21_13h20_15h20",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529584200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Are you working with an existing codebase? Do you want to use the cool libraries, tools or methodology you saw at this conference? This talk will show you how to combine legacy code with bleeding edge technology.</p>\n<p>Often the use of new technology and protocols is limited by fear of change in existing applications. Yet, as developers, we want to remain relevant and have fun with all the disruptive changes in our industry.</p>\n<p>This talk will drill-down from a high-level architectural view to the actual implementation of modern, strangling services in a legacy monolith, using DDD to define bounded contexts, in a safe and controlled manner.</p>\n",
      "id": "YGR-0279",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/f8b4d911da62b1852a31bed86e21349a003d1ae0",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bart Blommaerts"
          },
          "name": "Bart Blommaerts"
        }
      ],
      "title": "Innovation without asking permission",
      "lang": "en",
      "summary": "Are you working with an existing codebase? Do you want to use the cool libraries, tools or methodology you saw at this conference? This talk will show you how to combine legacy code with bleeding edge technology.\r\n\r\nOften the use of new technology and protocols is limited by fear of change in existing applications. Yet, as developers, we want to remain relevant and have fun with all the disruptive changes in our industry.\r\n\r\nThis talk will drill-down from a high-level architectural view to the actual implementation of modern, strangling services in a legacy monolith, using DDD to define bounded contexts, in a safe and controlled manner."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_thursday_21_14h30_15h20",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529584200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Everyone wants awesome architecture in their project. The kind of architecture you can gladly show at conferences: scalable, secure, testable, and without technical debt.\nBut how can we be sure we're going in the right direction? How do we quantify success? Is it possible to describe technical debt with valuable numbers, better than meaningless \"man days to fix\"? During my presentation, I will show you that you can do it with engineering - based on a calculator and set square. The time of carefree artists and ivory towers has passed.</p>\n",
      "id": "KOE-3476",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/67a98fdbe665850e6405fdc851c2085bf5ea567f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jakub Kubrynski"
          },
          "name": "Jakub Kubrynski"
        }
      ],
      "title": "Metrics driven architecture",
      "lang": "en",
      "summary": "Everyone wants awesome architecture in their project. The kind of architecture you can gladly show at conferences: scalable, secure, testable, and without technical debt.\r\nBut how can we be sure we're going in the right direction? How do we quantify success? Is it possible to describe technical debt with valuable numbers, better than meaningless \"man days to fix\"? During my presentation, I will show you that you can do it with engineering - based on a calculator and set square. The time of carefree artists and ivory towers has passed."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_thursday_21_14h30_15h20",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529584200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Microservices? At the Police? Definitely!<br  />\nAt the Cloud, Big Data and Internet division of the Dutch National Police, 4 DevOps teams use the latest open source technology to build high tech, cloud native web applications in a private cloud. These applications are used to support various types of police work with data from open, online sources and are built using Spring Boot, Angular 5, Spark, Kafka and Jenkins 2.<br  />\nIn this session, I'll share our experiences and real-world use cases for microservices. I’ll explain our architecture, why we chose it, which challenges we face and what this all brings us. I’ll show how 4 teams work together on one product, loosely based on the models used by Spotify and Netflix, and I’ll talk about how we apply the principles of DevOps and Continuous Delivery. I’ll show how we handle security, build pipelines, test automation, performance tests, service discovery, automated deployments and monitoring.<br  />\nYou’ll leave this session with an understanding of how this approach enables us to have the agility of a startup within the large Police organisation.</p>\n",
      "id": "FPJ-7024",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/f2f42728d617715c6241ac5f1df495541f8646a1",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bert Jan Schrijver"
          },
          "name": "Bert Jan Schrijver"
        }
      ],
      "title": "Microservices in action at the Dutch National Police",
      "lang": "en",
      "summary": "Microservices? At the Police? Definitely!  \r\nAt the Cloud, Big Data and Internet division of the Dutch National Police, 4 DevOps teams use the latest open source technology to build high tech, cloud native web applications in a private cloud. These applications are used to support various types of police work with data from open, online sources and are built using Spring Boot, Angular 5, Spark, Kafka and Jenkins 2.  \r\nIn this session, I'll share our experiences and real-world use cases for microservices. I’ll explain our architecture, why we chose it, which challenges we face and what this all brings us. I’ll show how 4 teams work together on one product, loosely based on the models used by Spotify and Netflix, and I’ll talk about how we apply the principles of DevOps and Continuous Delivery. I’ll show how we handle security, build pipelines, test automation, performance tests, service discovery, automated deployments and monitoring.  \r\nYou’ll leave this session with an understanding of how this approach enables us to have the agility of a startup within the large Police organisation."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_thursday_21_14h30_15h20",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529584200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>The Eclipse Collections framework is a feature-rich open source Java collections framework. This session explains the design of the framework and demonstrates many problems it solves. The session includes examples of object and primitive containers; the rich APIs available for eager and lazy iteration patterns; mutable and immutable collections; and additional container types not available in the JDK, such as Bag and Multimap.</p>\n",
      "id": "RJW-2312",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/2ceacd91f1f87d286adb420c05e1b423b94922bc",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Pawel Klaczewski"
          },
          "name": "Pawel Klaczewski"
        }
      ],
      "title": "Eclipse collections by example",
      "lang": "en",
      "summary": "The Eclipse Collections framework is a feature-rich open source Java collections framework. This session explains the design of the framework and demonstrates many problems it solves. The session includes examples of object and primitive containers; the rich APIs available for eager and lazy iteration patterns; mutable and immutable collections; and additional container types not available in the JDK, such as Bag and Multimap."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_thursday_21_14h30_15h20",
    "day": "thursday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529584200000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Conference",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>Coroutines is a new feature in Kotlin 1.1. It allows for writing an asynchronous code almost just like if it was regular/synchronous. This makes coroutines a great alternative to existing approaches for writing asynchronous applications.</p>\n<p>In this session, I'll show how coroutines work in Kotlin. You'll learn about new syntax and implementation details. You'll find out about the differences between coroutines-based and reactive-based solutions. You'll also see a sample Spring-based application which uses coroutines,</p>\n",
      "id": "ONZ-1197",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/cb95b6e9ad3ec4cdc5ce539e5486279a58d7f4d3",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Konrad Kamiński"
          },
          "name": "Konrad Kamiński"
        }
      ],
      "title": "Asynchronous programming with Kotlin coroutines",
      "lang": "en",
      "summary": "Coroutines is a new feature in Kotlin 1.1. It allows for writing an asynchronous code almost just like if it was regular/synchronous. This makes coroutines a great alternative to existing approaches for writing asynchronous applications.\r\n\r\nIn this session, I'll show how coroutines work in Kotlin. You'll learn about new syntax and implementation details. You'll find out about the differences between coroutines-based and reactive-based solutions. You'll also see a sample Spring-based application which uses coroutines,"
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529587200000,
    "toTime": "15:20",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_thursday_21_14h30_15h20",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529589000000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Closing Keynote",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>The proliferation of IoT devices and sensors provides a more precise picture of the physical world for us to process in the digital world. Increased computing power has made the processing of this data more practical. We can now influence the physical world from the digital and vice versa in ways that simply were not possible before. What are the ramifications of this blurring of the boundaries?</p>\n<p>This keynote examines both the technology changes that underpin the phenomena as well as the consequences to business, people, and society. New and exciting applications are possible, but there are also challenges to be managed.</p>\n",
      "id": "FYP-3380",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/e8e28b5abbf6a13e3dd1655069b0d0950b1505a7",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Rebecca Parsons"
          },
          "name": "Rebecca Parsons"
        }
      ],
      "title": "Where Does the Real World End - The Blurring of the Physical and Digital",
      "lang": "en",
      "summary": "The proliferation of IoT devices and sensors provides a more precise picture of the physical world for us to process in the digital world. Increased computing power has made the processing of this data more practical. We can now influence the physical world from the digital and vice versa in ways that simply were not possible before. What are the ramifications of this blurring of the boundaries?\r\n\r\nThis keynote examines both the technology changes that underpin the phenomena as well as the consequences to business, people, and society. New and exciting applications are possible, but there are also challenges to be managed."
    },
    "fromTime": "15:50",
    "toTimeMillis": 1529592600000,
    "toTime": "16:50",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "closing_key_a_room_1_thursday_21_15h50_16h50",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529594400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>You probably work on a distributed system. Even if you don't yet face a serverless microservice architecture using fancy NoSQL databases, you might simply call some remote services via REST or SOAP. Welcome to a world without ACID transactions which leaves you in charge of dealing with difficult problems yourself e.g. eventual consistency, distributed transactions, compensation or message delivery semantics like \"exactly-once\". In this talk, I’ll briefly describe why this will become the new normal and which challenges arise for us as developers. I will discuss strategies to deal with it and present real-life experiences, recipes, patterns and frameworks. Expect fun little live hacking sessions with Open Source components like Spring, Hystrix, Kafka and Camunda.</p>\n",
      "id": "XAS-3613",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/bfa8ffc90925f9f10f640f01cd4c71e09fc9d169",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bernd Ruecker"
          },
          "name": "Bernd Ruecker"
        }
      ],
      "title": "Lost in transaction? Strategies to deal with (in-)consistency in modern architectures.",
      "lang": "en",
      "summary": "You probably work on a distributed system. Even if you don't yet face a serverless microservice architecture using fancy NoSQL databases, you might simply call some remote services via REST or SOAP. Welcome to a world without ACID transactions which leaves you in charge of dealing with difficult problems yourself e.g. eventual consistency, distributed transactions, compensation or message delivery semantics like \"exactly-once\". In this talk, I’ll briefly describe why this will become the new normal and which challenges arise for us as developers. I will discuss strategies to deal with it and present real-life experiences, recipes, patterns and frameworks. Expect fun little live hacking sessions with Open Source components like Spring, Hystrix, Kafka and Camunda."
    },
    "fromTime": "17:20",
    "toTimeMillis": 1529597400000,
    "toTime": "18:10",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_thursday_21_17h20_18h10",
    "day": "thursday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529594400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "Conference",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>If you have children, you probably thought how to introduce them to the world of IT, when is the right time and in which way to do it.</p>\n<p>If you have small child, and English isn't native language, this task becomes even more difficult.</p>\n<p>Join me in this talk in which I will share how I introduced my 3 year old to the world of computers and programming, and how it went :)</p>\n",
      "id": "JBP-4020",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/03eb4b9a2fdc329c5d1832200bc5e40387cfcb5e",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Vladimir Dejanovic"
          },
          "name": "Vladimir Dejanovic"
        }
      ],
      "title": "How to introduce 3 year old to the world of Computers",
      "lang": "en",
      "summary": "If you have children, you probably thought how to introduce them to the world of IT, when is the right time and in which way to do it.\r\n\r\nIf you have small child, and English isn't native language, this task becomes even more difficult.\r\n\r\nJoin me in this talk in which I will share how I introduced my 3 year old to the world of computers and programming, and how it went :)"
    },
    "fromTime": "17:20",
    "toTimeMillis": 1529597400000,
    "toTime": "18:10",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_thursday_21_17h20_18h10",
    "day": "thursday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529594400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "geek",
      "talkType": "Conference",
      "track": "Mind the Geek",
      "summaryAsHtml": "<p>This session will share our experiences in converting a small remote controlled car into an autonomous driving vehicle. We'll talk about electronics, sensors, AI, computer vision and of course, the software that ties everything together.<br  />\nWe'll introduce you into the world of self driving cars and compare our solution to the stuff that is done in the big leagues by the likes of Tesla's 'autopilot' and Waymo's self driving cars. We'll explain the challenges that have to be faced and the dilemma's that come with creating a car being driven by software in real world scenarios.</p>\n",
      "id": "BXJ-0652",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/f2f42728d617715c6241ac5f1df495541f8646a1",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bert Jan Schrijver"
          },
          "name": "Bert Jan Schrijver"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/482d953e4d84c851aef02a9c35fda558c4b2d65f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tim van Eijndhoven"
          },
          "name": "Tim van Eijndhoven"
        }
      ],
      "title": "Building a self-driving RC car",
      "lang": "en",
      "summary": "This session will share our experiences in converting a small remote controlled car into an autonomous driving vehicle. We'll talk about electronics, sensors, AI, computer vision and of course, the software that ties everything together.  \r\nWe'll introduce you into the world of self driving cars and compare our solution to the stuff that is done in the big leagues by the likes of Tesla's 'autopilot' and Waymo's self driving cars. We'll explain the challenges that have to be faced and the dilemma's that come with creating a car being driven by software in real world scenarios."
    },
    "fromTime": "17:20",
    "toTimeMillis": 1529597400000,
    "toTime": "18:10",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_thursday_21_17h20_18h10",
    "day": "thursday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529594400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>Web applications don't talk with front-end and database only anymore. They increasingly often talk with each other. In order not to get crazy in this communication mess, it’s good to take a look at many aspects of creating web API. We will answer the \"why\", \"what\" and \"how\" questions to begin with. We will meet the three wizards: Morville, Fielding and Richardson. We will play with resources, behavior, relations, parameters, headers, collections, versioning, errors, security, throttling, cache, HATEOAS, management performance, health and business. There will be a bunch of tips on how to make consumers of our API happy. Warning: may contain traces of snakes and camels.</p>\n",
      "id": "WOJ-6242",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/750799cd09332b6b42735ce2144eecee68aa981b",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Paweł Zajączkowski"
          },
          "name": "Paweł Zajączkowski"
        }
      ],
      "title": "The Art of Web API Design",
      "lang": "en",
      "summary": "Web applications don't talk with front-end and database only anymore. They increasingly often talk with each other. In order not to get crazy in this communication mess, it’s good to take a look at many aspects of creating web API. We will answer the \"why\", \"what\" and \"how\" questions to begin with. We will meet the three wizards: Morville, Fielding and Richardson. We will play with resources, behavior, relations, parameters, headers, collections, versioning, errors, security, throttling, cache, HATEOAS, management performance, health and business. There will be a bunch of tips on how to make consumers of our API happy. Warning: may contain traces of snakes and camels."
    },
    "fromTime": "17:20",
    "toTimeMillis": 1529597400000,
    "toTime": "18:10",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_thursday_21_17h20_18h10",
    "day": "thursday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529594400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Functions, and the so called serverless computing have freed deveopers from worring about infrastructure, and even upper platform layers, as well some steps in the software development lifecycle. But once you have functions deployed, how do they interact with each other? How message navigates between them? Maybe, just maybe, it's time to look back again at EIPs - Enterprise Integration Patterns, and their use in this new way of deploying code to the Cloud. This talk will cover primarily the use of one of the key EIP frameworks - Apache Camel - and top patterns applicable to Serverless Computing using Functions services by Cloud vendors as part of the demonstrations.</p>\n",
      "id": "QYB-1937",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/2e852de5710fcb0a3c51936e8adf788439706204",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bruno Borges"
          },
          "name": "Bruno Borges"
        }
      ],
      "title": "A Look Back at Enterprise Integration Patterns and Their Use into Today's Serverless Computing",
      "lang": "en",
      "summary": "Functions, and the so called serverless computing have freed deveopers from worring about infrastructure, and even upper platform layers, as well some steps in the software development lifecycle. But once you have functions deployed, how do they interact with each other? How message navigates between them? Maybe, just maybe, it's time to look back again at EIPs - Enterprise Integration Patterns, and their use in this new way of deploying code to the Cloud. This talk will cover primarily the use of one of the key EIP frameworks - Apache Camel - and top patterns applicable to Serverless Computing using Functions services by Cloud vendors as part of the demonstrations. "
    },
    "fromTime": "17:20",
    "toTimeMillis": 1529597400000,
    "toTime": "18:10",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_thursday_21_17h20_18h10",
    "day": "thursday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>Java developers are often exposed to the inner-workings of JVM's garbage collectors, and there are a host of tools that help monitor garbage collector activity.</p>\n<p>But less often seen are the inner machinations of just-in-time compilation and deoptimization -- and how those machinations impact application performance.</p>\n<p>In this talk, we'll learn how to read some of the JVMs mysterious log files, explore tools for visualizing the information, and most importantly correlate the JVM activity with application performance behavior.</p>\n",
      "id": "IIW-9801",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/b51543d03206254f522115ac19410d93473e81a9",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Douglas Hawkins"
          },
          "name": "Douglas Hawkins"
        }
      ],
      "title": "A Visual Introduction to Inner-Workings of the JVM",
      "lang": "en",
      "summary": "Java developers are often exposed to the inner-workings of JVM's garbage collectors, and there are a host of tools that help monitor garbage collector activity.\r\n\r\nBut less often seen are the inner machinations of just-in-time compilation and deoptimization -- and how those machinations impact application performance.\r\n\r\nIn this talk, we'll learn how to read some of the JVMs mysterious log files, explore tools for visualizing the information, and most importantly correlate the JVM activity with application performance behavior.\r\n\r\n"
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529653800000,
    "toTime": "09:50",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_friday_22_9h0_9h50",
    "day": "friday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>If you cannot ship to production with confidence write tests until you can!</p>\n<p>Learn about all testing strategies we use at LinkedIn to confidently ship features to 500M members. Our flagship app linkedin.com ships 1000+ commits per week from 300+ unique contributors. Besides flagship, we have other products that spread across 5000 codebases. Let's zoom into:\n- testing in production\n- canaries and feature flags\n- testing microservices\n- testing machine learning models\n- testing search and relevance algorithms\n- resilience engineering</p>\n<p>This talk will help you design testing strategy for your products. Keep writing great tests!</p>\n",
      "id": "ANB-2367",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/4c6254ca577c243965219f3342ae676a08c91135",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Szczepan Faber"
          },
          "name": "Szczepan Faber"
        }
      ],
      "title": "Testing in production at LinkedIn",
      "lang": "en",
      "summary": "If you cannot ship to production with confidence write tests until you can!\r\n\r\nLearn about all testing strategies we use at LinkedIn to confidently ship features to 500M members. Our flagship app linkedin.com ships 1000+ commits per week from 300+ unique contributors. Besides flagship, we have other products that spread across 5000 codebases. Let's zoom into:\r\n - testing in production\r\n - canaries and feature flags\r\n - testing microservices\r\n - testing machine learning models\r\n - testing search and relevance algorithms\r\n - resilience engineering\r\n\r\nThis talk will help you design testing strategy for your products. Keep writing great tests!"
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529653800000,
    "toTime": "09:50",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_friday_22_9h0_9h50",
    "day": "friday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Conference",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>During this talk I present my research study in regards to several runtime optimizations done by Just In Time Compiler inside HotSpot/OpenJDK versus the one similar triggered in an ahead of time time manner by LLVM clang in C++.</p>\n",
      "id": "QTN-8052",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/16b2c8d0ebd0addead054b244ca6fbe5241f789d",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Ionut Balosin"
          },
          "name": "Ionut Balosin"
        }
      ],
      "title": "Runtime vs. compile time (JIT vs. AOT) optimizations in Java and C++",
      "lang": "en",
      "summary": "During this talk I present my research study in regards to several runtime optimizations done by Just In Time Compiler inside HotSpot/OpenJDK versus the one similar triggered in an ahead of time time manner by LLVM clang in C++."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529653800000,
    "toTime": "09:50",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_friday_22_9h0_9h50",
    "day": "friday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>Updating caches and full-text indexes, synchronizing data between microservices, maintaining different read models in a CRQS-style architecture, feeding operational data to your analytics tools -- just a few use cases which benefit so much from streaming the changes from your datastore. In this session, you’ll learn what change data capture (CDC) is about and how it can be implemented using Debezium, an open-source CDC solution based on Apache Kafka. Find out how Debezium captures all the changes from datastores such as MySQL, PostgreSQL and MongoDB, how to react to the change events in near real time, and how Debezium is designed to not compromise on data correctness and completeness also if things go wrong.</p>\n",
      "id": "OBS-3688",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/f2858869f04dba3a659940a2d4796bac90fe4bfe",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jiri Pechanec"
          },
          "name": "Jiri Pechanec"
        }
      ],
      "title": "Streaming Database Changes with Debezium",
      "lang": "en",
      "summary": "Updating caches and full-text indexes, synchronizing data between microservices, maintaining different read models in a CRQS-style architecture, feeding operational data to your analytics tools -- just a few use cases which benefit so much from streaming the changes from your datastore. In this session, you’ll learn what change data capture (CDC) is about and how it can be implemented using Debezium, an open-source CDC solution based on Apache Kafka. Find out how Debezium captures all the changes from datastores such as MySQL, PostgreSQL and MongoDB, how to react to the change events in near real time, and how Debezium is designed to not compromise on data correctness and completeness also if things go wrong."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529653800000,
    "toTime": "09:50",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_friday_22_9h0_9h50",
    "day": "friday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>Does it make sense today to develop the same mobile application as many times as there are devices?</p>\n<p>We were not supposed to stop repeat ourselves?</p>\n<p>Progressive Web Apps are the combination of web, plus the experience of native apps. You start from a tab in your browser and you finish with an icon on your home page… with no installation! As a native app, PWA brings other benefits such as sending push notifications, data-synchronization in background… also loading your application instantly, regardless of the network state (thanks to the service worker). During this session, we will see what are services worker and the 10 Commandments of a Progressive Web App. The debate between web and native is not ready to stop!</p>\n",
      "id": "QXD-5470",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/ec20dbee2e0fe5bf2f6ff6239b01f8c02cf0a30b",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Maxence Poutord"
          },
          "name": "Maxence Poutord"
        }
      ],
      "title": " Progressive Web Apps: Your web app on steroids",
      "lang": "en",
      "summary": "Does it make sense today to develop the same mobile application as many times as there are devices?\r\n\r\nWe were not supposed to stop repeat ourselves?\r\n\r\nProgressive Web Apps are the combination of web, plus the experience of native apps. You start from a tab in your browser and you finish with an icon on your home page… with no installation! As a native app, PWA brings other benefits such as sending push notifications, data-synchronization in background… also loading your application instantly, regardless of the network state (thanks to the service worker). During this session, we will see what are services worker and the 10 Commandments of a Progressive Web App. The debate between web and native is not ready to stop!"
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529653800000,
    "toTime": "09:50",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_friday_22_9h0_9h50",
    "day": "friday"
  },
  {
    "roomId": "x_lab_room1",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "architecture",
      "talkType": "Hands-on Labs",
      "track": "Architecture",
      "summaryAsHtml": "<p>You heard of \"new thing\" called gRPC and promises that it will solve all issues for you, so now you are not sure if you should use it for breaking up your monolith to Microservices. If it is good for Google it should be good for you also right?</p>\n<p>On the other hand, you have been using REST API's for some time now, at least as a consumer, so maybe this would be better approach in Microservices waters, or would it?</p>\n<p>Which one to chose and which one will fit your use case better?</p>\n<p>Join me in this workshop, where I will show how to break up a monolith by using gRPC, when and where to use it, and also where and when not to use it.</p>\n",
      "id": "DAZ-3807",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/03eb4b9a2fdc329c5d1832200bc5e40387cfcb5e",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Vladimir Dejanovic"
          },
          "name": "Vladimir Dejanovic"
        }
      ],
      "title": "Intro to gRPC",
      "lang": "en",
      "summary": "You heard of \"new thing\" called gRPC and promises that it will solve all issues for you, so now you are not sure if you should use it for breaking up your monolith to Microservices. If it is good for Google it should be good for you also right?\r\n\r\nOn the other hand, you have been using REST API's for some time now, at least as a consumer, so maybe this would be better approach in Microservices waters, or would it?\r\n\r\nWhich one to chose and which one will fit your use case better?\r\n\r\nJoin me in this workshop, where I will show how to break up a monolith by using gRPC, when and where to use it, and also where and when not to use it."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529661600000,
    "toTime": "12:00",
    "roomCapacity": 50,
    "roomName": "Lab Room A",
    "slotId": "lab_x_lab_room1_friday_22_9h0_12h0",
    "day": "friday"
  },
  {
    "roomId": "x_lab_room2",
    "notAllocated": false,
    "fromTimeMillis": 1529650800000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "cloud",
      "talkType": "Hands-on Labs",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>The first generation of microservices was primarily shaped by Netflix OSS and leveraged by numerous Spring Cloud annotations all throughout your business logic. The next generation of microservices will leverage sidecars and a service mesh. In this session, we will give you a taste of Envoy and Istio, two open source projects that will change the way you write distributed, cloud native, Java applications on Kubernetes/OpenShift. Traffic shaping, chaos fault-injection, A/B testing, dark launches, smart canaries and much more.</p>\n",
      "id": "YZT-3504",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/0c1d35c85c8cd2afbea1a05c90edc3f29b1591d8",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Burr Sutter"
          },
          "name": "Burr Sutter"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/ebefb4bc6d5e71705adebeb488fd7c55cfc8d921",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Edson Yanaga"
          },
          "name": "Edson Yanaga"
        }
      ],
      "title": "Istio: Service Mesh & Dark Canaries",
      "lang": "en",
      "summary": "The first generation of microservices was primarily shaped by Netflix OSS and leveraged by numerous Spring Cloud annotations all throughout your business logic. The next generation of microservices will leverage sidecars and a service mesh. In this session, we will give you a taste of Envoy and Istio, two open source projects that will change the way you write distributed, cloud native, Java applications on Kubernetes/OpenShift. Traffic shaping, chaos fault-injection, A/B testing, dark launches, smart canaries and much more."
    },
    "fromTime": "09:00",
    "toTimeMillis": 1529661600000,
    "toTime": "12:00",
    "roomCapacity": 50,
    "roomName": "Lab Room B",
    "slotId": "lab_x_lab_room2_friday_22_9h0_12h0",
    "day": "friday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529655600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>Apache Kafka is a de facto standard streaming data processing platform, being widely deployed as a messaging system, and having a robust data integration framework (Kafka Connect) and stream processing API (Kafka Streams) to meet the needs that common attend real-time message processing. But there’s more!</p>\n<p>Kafka now offers KSQL, a declarative, SQL-like stream processing language that lets you define powerful stream-processing applications easily. What once took some moderately sophisticated Java code can now be done at the command line with a familiar and eminently approachable syntax. Come to this talk for an overview of KSQL with live coding on live streaming data.</p>\n",
      "id": "YNO-2976",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/56d788a1dc7cc798a1be226c6b2b00b2a12f58be",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tim Berglund"
          },
          "name": "Tim Berglund"
        }
      ],
      "title": "Processing Streaming Data with KSQL",
      "lang": "en",
      "summary": "Apache Kafka is a de facto standard streaming data processing platform, being widely deployed as a messaging system, and having a robust data integration framework (Kafka Connect) and stream processing API (Kafka Streams) to meet the needs that common attend real-time message processing. But there’s more!\r\n\r\nKafka now offers KSQL, a declarative, SQL-like stream processing language that lets you define powerful stream-processing applications easily. What once took some moderately sophisticated Java code can now be done at the command line with a familiar and eminently approachable syntax. Come to this talk for an overview of KSQL with live coding on live streaming data.\r\n"
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529658600000,
    "toTime": "11:10",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_friday_22_10h20_11h10",
    "day": "friday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529655600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>Angular is one of the most popular frameworks for building front-end applications. It is getting vitally important for Full-stack web developer positions.\nAfter the success of the first version, version 2.0 was released in 2016. It took into account potential design flaws and errors of the previous versions, improved performance, simplified usage with the framework. In 2017, Angular 4, and then Angular 5, was released.</p>\n<p>In this talk I will provided details how we migrated our project to Angular, tell why TypeScript fits best for development and try to answer to the question - is Angular perfect choice for person who get used to back-end development.\nI will share the errors we made during this transition, how we solved them and, of course, the most important thing - Angular best practices.\nThe talk will include three parts:</p>\n<p>1) Development and testing\n2) Deployment\n3) Speed and performance</p>\n",
      "id": "PLO-2977",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/50b6bc28869e159c7a310d6001d3046b6c6fe3dd",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Sergey Morenets"
          },
          "name": "Sergey Morenets"
        }
      ],
      "title": "Angular 5 best practices",
      "lang": "en",
      "summary": "Angular is one of the most popular frameworks for building front-end applications. It is getting vitally important for Full-stack web developer positions. \r\nAfter the success of the first version, version 2.0 was released in 2016. It took into account potential design flaws and errors of the previous versions, improved performance, simplified usage with the framework. In 2017, Angular 4, and then Angular 5, was released.\r\n\r\nIn this talk I will provided details how we migrated our project to Angular, tell why TypeScript fits best for development and try to answer to the question - is Angular perfect choice for person who get used to back-end development.\r\nI will share the errors we made during this transition, how we solved them and, of course, the most important thing - Angular best practices.\r\nThe talk will include three parts:\r\n\r\n1) Development and testing\r\n2) Deployment\r\n3) Speed and performance"
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529658600000,
    "toTime": "11:10",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_friday_22_10h20_11h10",
    "day": "friday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529655600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "lang",
      "talkType": "Conference",
      "track": "Programming Languages",
      "summaryAsHtml": "<p>GraalVM project enhances the Java ecosystem with an integrated, polyglot, high-performance execution environment for dynamic, static, and native languages. GraalVM supports Java, Scala, Kotlin, Groovy, and other JVM-based languages. At the same time, it can run the dynamic scripting languages JavaScript including node.js, Ruby, R, and Python.</p>\n<p>In this session you'll see demos and learn what you can do with GraalVM, from using it as the JVM JIT compiler, enhancing the JIT, running native and polyglot programs, compiling them ahead of time for faster startup and lower runtime overhead, debugging your polyglot code using exact same tools for any language, to profiling performance and memory of your application and embedding GraalVM in a native application for portability.</p>\n<p>GraalVM offers you the opportunity to write the code in the language you want, which suits the problem the best, and run the resulting program really fast wherever you like: JVM, native code, even inside a database.</p>\n",
      "id": "OQK-7388",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/cc146acabac72eac9152c793314f68b484597e53",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Oleg Šelajev"
          },
          "name": "Oleg Šelajev"
        }
      ],
      "title": "Ten Things You Can Do With GraalVM",
      "lang": "en",
      "summary": "GraalVM project enhances the Java ecosystem with an integrated, polyglot, high-performance execution environment for dynamic, static, and native languages. GraalVM supports Java, Scala, Kotlin, Groovy, and other JVM-based languages. At the same time, it can run the dynamic scripting languages JavaScript including node.js, Ruby, R, and Python. \r\n\r\nIn this session you'll see demos and learn what you can do with GraalVM, from using it as the JVM JIT compiler, enhancing the JIT, running native and polyglot programs, compiling them ahead of time for faster startup and lower runtime overhead, debugging your polyglot code using exact same tools for any language, to profiling performance and memory of your application and embedding GraalVM in a native application for portability. \r\n\r\nGraalVM offers you the opportunity to write the code in the language you want, which suits the problem the best, and run the resulting program really fast wherever you like: JVM, native code, even inside a database. "
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529658600000,
    "toTime": "11:10",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_friday_22_10h20_11h10",
    "day": "friday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529655600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "security",
      "talkType": "Conference",
      "track": "Security",
      "summaryAsHtml": "<p>Our life becomes increasingly digital. In order to gain access to the majority of internet-based services we decide to trade our personal data. The data itself is the new oil; along with digital fingerprinting and advanced behavioural profiling techniques it allows third-party actors to have a huge impact on our choices on unprecedented scale, as Cambridge Analytica scandal proved. Understanding the meaning of good privacy practices and the importance of data protection is the first step towards better internet and safer digital life for all.</p>\n",
      "id": "HVF-8730",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/586db8f6b56112dbdde225a27a4c9cf17d386c20",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Małgorzata Fraser "
          },
          "name": "Małgorzata Fraser "
        }
      ],
      "title": "Digital Life With Privacy In Mind - How To Think About Data After Cambridge Analytica?",
      "lang": "en",
      "summary": "Our life becomes increasingly digital. In order to gain access to the majority of internet-based services we decide to trade our personal data. The data itself is the new oil; along with digital fingerprinting and advanced behavioural profiling techniques it allows third-party actors to have a huge impact on our choices on unprecedented scale, as Cambridge Analytica scandal proved. Understanding the meaning of good privacy practices and the importance of data protection is the first step towards better internet and safer digital life for all. "
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529658600000,
    "toTime": "11:10",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_friday_22_10h20_11h10",
    "day": "friday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529655600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "web",
      "talkType": "Conference",
      "track": "Modern Web",
      "summaryAsHtml": "<p>This is your introduction to the distributed web in the incarnation of <a href=\"https://ipfs.io\">IPFS</a>. A really cool platform that retains the original vision of the web and makes it truly distributed.</p>\n<p>Firstly we will go through a couple of problem areas with the current internet infrastructure and how IPFS fits into this vision.</p>\n<p>We will then move on to how IPFS actually works and show some examples with a language running on the JVM. We will look at:</p>\n<ul>\n<li>how the files are fingerprinted, versioned and identified</li>\n<li>how the network of IPFS nodes finds the relevant data for us</li>\n<li>decentralized and human friendly addressing with IPNS</li>\n</ul>\n<p>Lastly we will look at some typical use cases for IPFS. We will note how it fits rather nicely as a storage option for blockchain applications.</p>\n<p>Fredrik Rubensson is a mentor and senior developer at <a href=\"https://goseetalents.com\">Go See Talents</a> - providing key expertise to the startup scene of Stockholm.</p>\n",
      "id": "WJD-3563",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/7ca58ad6c0c2fcd8ecc7f46edf8fb18eb54324f6",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Fredrik Rubensson"
          },
          "name": "Fredrik Rubensson"
        }
      ],
      "title": "IPFS and how to distribute the web",
      "lang": "en",
      "summary": "This is your introduction to the distributed web in the incarnation of [IPFS](https://ipfs.io). A really cool platform that retains the original vision of the web and makes it truly distributed. \r\n\r\nFirstly we will go through a couple of problem areas with the current internet infrastructure and how IPFS fits into this vision. \r\n\r\nWe will then move on to how IPFS actually works and show some examples with a language running on the JVM. We will look at: \r\n\r\n- how the files are fingerprinted, versioned and identified\r\n- how the network of IPFS nodes finds the relevant data for us\r\n- decentralized and human friendly addressing with IPNS\r\n\r\nLastly we will look at some typical use cases for IPFS. We will note how it fits rather nicely as a storage option for blockchain applications.\r\n\r\nFredrik Rubensson is a mentor and senior developer at [Go See Talents](https://goseetalents.com) - providing key expertise to the startup scene of Stockholm."
    },
    "fromTime": "10:20",
    "toTimeMillis": 1529658600000,
    "toTime": "11:10",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_friday_22_10h20_11h10",
    "day": "friday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529659800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>Functional programming with immutables, monads and high order functions is not something that is common to java world. Java frameworks such as Spring seem to  make this purity... impossible, especially with mutable beans, runtime context  and aspects.</p>\n<p>New version of Spring  is a game changer here. With Spring Web Flux and project reactor we can actually create programs, webservers using almost only pure functional programming.\nUse of Kotlin and libraries such as Vavr makes such approach sensible alternative to the 'old style' in some projects.</p>\n<p>Let me show You how it works on a real business case, with some interesting practices that may be interesting to you - even if you do not step into fully functional path.</p>\n",
      "id": "YRS-5946",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/bc785795de3b68f2af8ffb6c49248e1eaf553847",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jarek Ratajski"
          },
          "name": "Jarek Ratajski"
        }
      ],
      "title": "Staying pure and functional with Spring 5 ",
      "lang": "en",
      "summary": "Functional programming with immutables, monads and high order functions is not something that is common to java world. Java frameworks such as Spring seem to  make this purity... impossible, especially with mutable beans, runtime context  and aspects. \r\n\r\nNew version of Spring  is a game changer here. With Spring Web Flux and project reactor we can actually create programs, webservers using almost only pure functional programming. \r\nUse of Kotlin and libraries such as Vavr makes such approach sensible alternative to the 'old style' in some projects.\r\n\r\nLet me show You how it works on a real business case, with some interesting practices that may be interesting to you - even if you do not step into fully functional path.\r\n"
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529662800000,
    "toTime": "12:20",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_friday_22_11h30_12h20",
    "day": "friday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529659800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>Deep Learning has become the hottest topic in the IT industry: a week hardly goes by without a new breakthrough. In this talk, we’ll give you a tour of the state of the art: through code-level demos based on Open Source libraries like Apache MXNet or Keras, we’ll demonstrate advanced models based on CNN, GAN and LSTM architectures, which solve complex problems such as image detection, image generation and machine translation. We’ll also show how to customize models on your own data set and how to use them in your own applications. Last but not least, you’ll learn how to deploy these models in production with just a few lines of code thanks to Amazon SageMaker.</p>\n",
      "id": "SBY-9866",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/6c7d86bb7ec23933390b0f4968fbdf4ce58021c6",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Julien SIMON"
          },
          "name": "Julien SIMON"
        }
      ],
      "title": "Deep Learning for Developers",
      "lang": "en",
      "summary": "Deep Learning has become the hottest topic in the IT industry: a week hardly goes by without a new breakthrough. In this talk, we’ll give you a tour of the state of the art: through code-level demos based on Open Source libraries like Apache MXNet or Keras, we’ll demonstrate advanced models based on CNN, GAN and LSTM architectures, which solve complex problems such as image detection, image generation and machine translation. We’ll also show how to customize models on your own data set and how to use them in your own applications. Last but not least, you’ll learn how to deploy these models in production with just a few lines of code thanks to Amazon SageMaker."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529662800000,
    "toTime": "12:20",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_friday_22_11h30_12h20",
    "day": "friday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529659800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>Streaming is all the rage in the data space, but can stream processing be used to build business systems? Do Streaming and Microservices actually have anything in common?\nThese are the questions we’ll explore in this talk by looking at how real-world Streaming Microservices are actually built. We'll explore how services collaborate using events instead of traditional REST calls. We'll take this idea a step further using Kafka’s Streams API: embedding the ability to join and process data right inside our services. Finally we'll build a fictitious system, from the ground up, using these tools and techniques, bridging the sync-async divide to form bounded contexts separated by an asynchronous, event-driven core.</p>\n",
      "id": "WAY-3570",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/4d4f1ecec896ef39217061e3474cd97be13e19f4",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Ben Stopford"
          },
          "name": "Ben Stopford"
        }
      ],
      "title": "Building Streaming Microservices with Apache Kafka",
      "lang": "en",
      "summary": "Streaming is all the rage in the data space, but can stream processing be used to build business systems? Do Streaming and Microservices actually have anything in common? \r\nThese are the questions we’ll explore in this talk by looking at how real-world Streaming Microservices are actually built. We'll explore how services collaborate using events instead of traditional REST calls. We'll take this idea a step further using Kafka’s Streams API: embedding the ability to join and process data right inside our services. Finally we'll build a fictitious system, from the ground up, using these tools and techniques, bridging the sync-async divide to form bounded contexts separated by an asynchronous, event-driven core. "
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529662800000,
    "toTime": "12:20",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_friday_22_11h30_12h20",
    "day": "friday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529659800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>Czy zostałeś ostatnio awansowany z dewelopera na menedżera i czujesz się zagubiony? Albo zajmujesz się programowaniem w power poincie od lat i nadal jesteś zaskakiwany przez swój zespół? Nie martw się – też to przechodziliśmy i chętnie podzielimy się doświadczeniem. Mamy także dzieci…</p>\n<p>Bycie managerem wiąże się z jednej strony z uczestnictwem w wielu kursach, setkami książek: rzeczy, które nauczyłeś się na studiach MBA, rzeczy których nie nauczysz się na MBA, psychologia w biznesie, zasoby ludzkie, coaching - lista tylko rośnie…</p>\n<p>Z drugiej strony, mówi się po prostu bądź dobra osobą, bądź spójny, uwierz w innych - to wystarczy. Zarządzanie ludźmi jest proste jak drut…</p>\n<p>Które podejście jest właściwe?</p>\n<p>Podczas spotkania dowiesz się, jak w praktyce zastosować kilka zasad zarządzania, które tworzą podstawy zarządzania deweloperami. Zweryfikujemy je na realnych przykładach z życia, czy sprawdziły się czy nie. Te zasady nie są lekiem na całe zło, one działają w pewnym kontekście, którego w naszych historiach nie zabraknie.</p>\n<p>Czy powyższe jest sekretem do uczynienia życia managera dużo bardziej prostym? Czy jesteś zainteresowany znalezieniem tego klucza?</p>\n",
      "id": "WOL-2553",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/edfd2e41a3e6f04dfc4621af7b70e76c8444139b",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Bartek Nowakowski"
          },
          "name": "Bartek Nowakowski"
        },
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/23ef7b522c6dec3ed2053525e43489e040ff1d85",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jakub Marchwicki"
          },
          "name": "Jakub Marchwicki"
        }
      ],
      "title": "Niańczenie programistów vs. zarządzanie dziećmi",
      "lang": "en",
      "summary": "Czy zostałeś ostatnio awansowany z dewelopera na menedżera i czujesz się zagubiony? Albo zajmujesz się programowaniem w power poincie od lat i nadal jesteś zaskakiwany przez swój zespół? Nie martw się – też to przechodziliśmy i chętnie podzielimy się doświadczeniem. Mamy także dzieci…\r\n\r\nBycie managerem wiąże się z jednej strony z uczestnictwem w wielu kursach, setkami książek: rzeczy, które nauczyłeś się na studiach MBA, rzeczy których nie nauczysz się na MBA, psychologia w biznesie, zasoby ludzkie, coaching - lista tylko rośnie…\r\n\r\nZ drugiej strony, mówi się po prostu bądź dobra osobą, bądź spójny, uwierz w innych - to wystarczy. Zarządzanie ludźmi jest proste jak drut…\r\n\r\nKtóre podejście jest właściwe?\r\n\r\nPodczas spotkania dowiesz się, jak w praktyce zastosować kilka zasad zarządzania, które tworzą podstawy zarządzania deweloperami. Zweryfikujemy je na realnych przykładach z życia, czy sprawdziły się czy nie. Te zasady nie są lekiem na całe zło, one działają w pewnym kontekście, którego w naszych historiach nie zabraknie.\r\n\r\nCzy powyższe jest sekretem do uczynienia życia managera dużo bardziej prostym? Czy jesteś zainteresowany znalezieniem tego klucza?"
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529662800000,
    "toTime": "12:20",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_friday_22_11h30_12h20",
    "day": "friday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529659800000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Serverless computing and FaaS (Function as a Service) are the new blacks! They radically change how software is organized, deployed, and charged for, and is in the process of further disrupting the still-evolving world of cloud computing.</p>\n<p>This hands-on session will introduce you to 'Fn Project' (http://fnproject.io), a new open source serverless platform, which features a code-first approach to building polyglot applications. We will discuss Fn Flow, a CompletionStage like API, used to compose multiple functions into meaningful applications. No flow-charts, no exoteric stuff, just plain readable and testable (Java) code! And although 'Fn Project' is polyglot, this session will focus mostly on the Java and Kotlin side of it.</p>\n",
      "id": "RIT-7932",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/ee33117f9f4a0862bbafa05704d8b33288d4079c",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Matthew Gilliard"
          },
          "name": "Matthew Gilliard"
        }
      ],
      "title": "Fn Project – an open source container native serverless platform",
      "lang": "en",
      "summary": "Serverless computing and FaaS (Function as a Service) are the new blacks! They radically change how software is organized, deployed, and charged for, and is in the process of further disrupting the still-evolving world of cloud computing. \r\n\r\nThis hands-on session will introduce you to 'Fn Project' (http://fnproject.io), a new open source serverless platform, which features a code-first approach to building polyglot applications. We will discuss Fn Flow, a CompletionStage like API, used to compose multiple functions into meaningful applications. No flow-charts, no exoteric stuff, just plain readable and testable (Java) code! And although 'Fn Project' is polyglot, this session will focus mostly on the Java and Kotlin side of it."
    },
    "fromTime": "11:30",
    "toTimeMillis": 1529662800000,
    "toTime": "12:20",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_friday_22_11h30_12h20",
    "day": "friday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529664600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Quickie Sessions",
      "track": "Java Language",
      "summaryAsHtml": "<p>Spock was a game changer for all the people struggling with unit testing in JUnit 4. Compact syntax, parameterized tests or flexibility to mention just a few advantages. Over 10 years after JUnit 4.0, the brand new, written from scratch, Java 8 optimized Junit 5 has been released. Is it still worth to write tests in Spock?</p>\n<p>During my presentation I will compare selected areas of Spock and JUnit 5 to give you an overview how the situation looks like in 2018. I will try to answer the question if its time for Spock to fade into oblivion or maybe quite the opposite it is still light years ahead of JUnit 5.</p>\n",
      "id": "YMP-9497",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/54627765efcd8b8bfce2d66402df14745d81e864",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Marcin Zajączkowski"
          },
          "name": "Marcin Zajączkowski"
        }
      ],
      "title": "Spock vs JUnit 5 - Clash of the Titans",
      "lang": "en",
      "summary": "Spock was a game changer for all the people struggling with unit testing in JUnit 4. Compact syntax, parameterized tests or flexibility to mention just a few advantages. Over 10 years after JUnit 4.0, the brand new, written from scratch, Java 8 optimized Junit 5 has been released. Is it still worth to write tests in Spock?\r\n\r\nDuring my presentation I will compare selected areas of Spock and JUnit 5 to give you an overview how the situation looks like in 2018. I will try to answer the question if its time for Spock to fade into oblivion or maybe quite the opposite it is still light years ahead of JUnit 5."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529665500000,
    "toTime": "13:05",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "quick_room_2_friday_22_12h50_13h5",
    "day": "friday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529664600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Quickie Sessions",
      "track": "Architecture",
      "summaryAsHtml": "<p>Web services development, no matter JSON or SOAP, is today easy like adding an annotation to a method. For API development you don’t need much more than OAS (Swagger). But how to create complex yet simple interfaces and provide consistent access to a wide variety of many APIs, e.g. microservices? How to create a friendly system for both developers and consumers (web, mobile, fridge ...)? What is the way to avoid duplications of cross-cutting services concerns like security or network support?\nDiscover the possibilities, strengths and drawbacks of open source solutions and learn how to implement API Gateway for monolith, microservices or IoT.\nLanguage: Polish.</p>\n",
      "id": "PSN-4212",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/35ae1ad5033cee1286d3e14167deca8c639a64ec",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tomasz Skowroński"
          },
          "name": "Tomasz Skowroński"
        }
      ],
      "title": "Riders On The Storm: API Gateways for developers",
      "lang": "en",
      "summary": "Web services development, no matter JSON or SOAP, is today easy like adding an annotation to a method. For API development you don’t need much more than OAS (Swagger). But how to create complex yet simple interfaces and provide consistent access to a wide variety of many APIs, e.g. microservices? How to create a friendly system for both developers and consumers (web, mobile, fridge ...)? What is the way to avoid duplications of cross-cutting services concerns like security or network support?\r\nDiscover the possibilities, strengths and drawbacks of open source solutions and learn how to implement API Gateway for monolith, microservices or IoT. \r\nLanguage: Polish."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529665500000,
    "toTime": "13:05",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "quick_room_3_friday_22_12h50_13h5",
    "day": "friday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529664600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Quickie Sessions",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>Infrastructure, especially in a cloud-based environment is complex, dynamic and consists of many unique components. If you take a quick look under the hood of any cloud-based infrastructure project, you will find that many of elements involved are tightly intertwined leading to higher maintenance costs and a chaotic environment.</p>\n<p>Fortunately, using infrastructure as code goes a long way to resolving these issues but if consistent standards are not enforced, you may be left with the same kind of mess you were trying to avoid in the first place.</p>\n<p>In this presentation, I'll show how easily you can define your whole infrastructure stack, including all of the myriad relationships between components and the standards that govern them, in a simple Groovy DSL using the InfraDSL project as an example. Implementing this approach will make managing your systems easy to do and scalable.</p>\n",
      "id": "MFC-8798",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/67a98fdbe665850e6405fdc851c2085bf5ea567f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Jakub Kubrynski"
          },
          "name": "Jakub Kubrynski"
        }
      ],
      "title": "Infrastructure as a code simplified by conventions",
      "lang": "en",
      "summary": "Infrastructure, especially in a cloud-based environment is complex, dynamic and consists of many unique components. If you take a quick look under the hood of any cloud-based infrastructure project, you will find that many of elements involved are tightly intertwined leading to higher maintenance costs and a chaotic environment.\r\n\r\nFortunately, using infrastructure as code goes a long way to resolving these issues but if consistent standards are not enforced, you may be left with the same kind of mess you were trying to avoid in the first place.\r\n\r\nIn this presentation, I'll show how easily you can define your whole infrastructure stack, including all of the myriad relationships between components and the standards that govern them, in a simple Groovy DSL using the InfraDSL project as an example. Implementing this approach will make managing your systems easy to do and scalable."
    },
    "fromTime": "12:50",
    "toTimeMillis": 1529665500000,
    "toTime": "13:05",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "quick_room_4_friday_22_12h50_13h5",
    "day": "friday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>Everyone worries about performance but few of us have the time to truly understand it.  Last year's talk exposed some puzzling results in Java 7 and 8, but the Java language, APIs, and JVMs keep evolving.</p>\n<p>In this presentation, we'll take a look at some surprising and often unintuitive performance problems and solutions, but with an emphasis on comparing newer language features and APIs to their old counterparts.</p>\n<p>Not simply with the goal of determining which looping style is best, but also with the aim to better understand the complexity that lies inside the JVM.</p>\n",
      "id": "FBH-9141",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/b51543d03206254f522115ac19410d93473e81a9",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Douglas Hawkins"
          },
          "name": "Douglas Hawkins"
        }
      ],
      "title": "Java Performance Puzzlers 2018 -- New Performance Puzzles",
      "lang": "en",
      "summary": "Everyone worries about performance but few of us have the time to truly understand it.  Last year's talk exposed some puzzling results in Java 7 and 8, but the Java language, APIs, and JVMs keep evolving.\r\n\r\nIn this presentation, we'll take a look at some surprising and often unintuitive performance problems and solutions, but with an emphasis on comparing newer language features and APIs to their old counterparts.\r\n\r\nNot simply with the goal of determining which looping style is best, but also with the aim to better understand the complexity that lies inside the JVM."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529669400000,
    "toTime": "14:10",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_friday_22_13h20_14h10",
    "day": "friday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>You know what nobody has ever said to me? \"I wish you'd covered even more in your 45 minute 'Cloud Native Java' talk!\" And I listened! In this talk, we'll look at Spring Cloud.next to support modern microservices development, focusing on the things that really matter (or, at least, the things we've got cooking in Spring Boot 2.0 and Spring Cloud Finchley, both due before April or so):</p>\n<p>functions-as-a-service with Spring Cloud Function. We've got FUNCTIONS (wrapped in apps, in containers, running on servers, in datacenters)\nfunctional reactive REST endpoints (totally different meaning for \"function\" here, though)\nreactive programming with Spring Framework 5. Leverage flow control at every layer and make the most efficient use of every CPU when doing input/output. You're going to need every bit of efficiency that you can get after you've installed the patches for Spectre and Meltdown!\nKotlin. Yes, KOTLIN: you wanted Java and I'm giving it to you.. in libraries that I'll use from Kotlin.\nmessaging with Apache Kafka. Nothing funny here. It's just awesome.\nLive on the edge with the new, reactive, rate-limiting, proxying, websocket-aware Spring Cloud Gateway\nASCII art!</p>\n",
      "id": "MXH-8587",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/039f1c83c20debd286fce42036332a11fd2f9e18",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Josh Long"
          },
          "name": "Josh Long"
        }
      ],
      "title": "Cloud Native Java, part 2",
      "lang": "en",
      "summary": "You know what nobody has ever said to me? \"I wish you'd covered even more in your 45 minute 'Cloud Native Java' talk!\" And I listened! In this talk, we'll look at Spring Cloud.next to support modern microservices development, focusing on the things that really matter (or, at least, the things we've got cooking in Spring Boot 2.0 and Spring Cloud Finchley, both due before April or so):\r\n\r\nfunctions-as-a-service with Spring Cloud Function. We've got FUNCTIONS (wrapped in apps, in containers, running on servers, in datacenters)\r\nfunctional reactive REST endpoints (totally different meaning for \"function\" here, though)\r\nreactive programming with Spring Framework 5. Leverage flow control at every layer and make the most efficient use of every CPU when doing input/output. You're going to need every bit of efficiency that you can get after you've installed the patches for Spectre and Meltdown!\r\nKotlin. Yes, KOTLIN: you wanted Java and I'm giving it to you.. in libraries that I'll use from Kotlin.\r\nmessaging with Apache Kafka. Nothing funny here. It's just awesome.\r\nLive on the edge with the new, reactive, rate-limiting, proxying, websocket-aware Spring Cloud Gateway\r\nASCII art!"
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529669400000,
    "toTime": "14:10",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_friday_22_13h20_14h10",
    "day": "friday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "bigdata",
      "talkType": "Conference",
      "track": "Big Data & AI",
      "summaryAsHtml": "<p>In this lecture, we give some insights how Nauto, a Palo Alto based startup, solves the challenges of  building an IoT platform collecting and processing data from thousands of connected devices collecting data from within cars and other types of vehicles. We describe how Nauto utilizes these visual and sensor data streams by using a combination of on-device and cloud-based Deep Learning approaches to make driving safer and fleets smarter.</p>\n",
      "id": "GOW-0501",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/d98a4699ddce7e49dd9fc388f1a57ffd9119ed96",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Christian Merkwirth"
          },
          "name": "Christian Merkwirth"
        }
      ],
      "title": "Improving safety in real world driving and transportation with Big Data and Internet of Things",
      "lang": "en",
      "summary": "In this lecture, we give some insights how Nauto, a Palo Alto based startup, solves the challenges of  building an IoT platform collecting and processing data from thousands of connected devices collecting data from within cars and other types of vehicles. We describe how Nauto utilizes these visual and sensor data streams by using a combination of on-device and cloud-based Deep Learning approaches to make driving safer and fleets smarter."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529669400000,
    "toTime": "14:10",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_friday_22_13h20_14h10",
    "day": "friday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "cloud",
      "talkType": "Conference",
      "track": "Cloud, Containers &amp; Infrastructure",
      "summaryAsHtml": "<p>We automated our deployment pipelines. We do blue/green and canary deployments. Now we need the next step to reach another level of software releases. Now we want to test our business hypothesis. Two different approaches outstand in this area: smart routers and feature toggles. We'll have it covered. And lately we've hearing about Service Meshes: we'll do stateful dark launches too!</p>\n<p>Come to this session to see lots of demos and deployments with smart routers and feature toggles to check how effective A/B testing can be achieved. Of course A/B testing is nothing without monitoring, so we'll a monitoring platform setup and integrated for everything! You may be thinking about A/B, but after this session we'll get you from A to Z.</p>\n",
      "id": "JOX-8989",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/ebefb4bc6d5e71705adebeb488fd7c55cfc8d921",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Edson Yanaga"
          },
          "name": "Edson Yanaga"
        }
      ],
      "title": "Advanced Pipelines for Hypothesis-Driven Development: Smart Routers, Feature Toggles, and Service Mesh",
      "lang": "en",
      "summary": "We automated our deployment pipelines. We do blue/green and canary deployments. Now we need the next step to reach another level of software releases. Now we want to test our business hypothesis. Two different approaches outstand in this area: smart routers and feature toggles. We'll have it covered. And lately we've hearing about Service Meshes: we'll do stateful dark launches too!\r\n\r\nCome to this session to see lots of demos and deployments with smart routers and feature toggles to check how effective A/B testing can be achieved. Of course A/B testing is nothing without monitoring, so we'll a monitoring platform setup and integrated for everything! You may be thinking about A/B, but after this session we'll get you from A to Z."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529669400000,
    "toTime": "14:10",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_friday_22_13h20_14h10",
    "day": "friday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>The decomposition of the monolith into systems of microservices does not only involve the division of monolithic code it also often includes the dissolution of monolithic data. Therefore building systems composed of loosely coupled microservices requires new software strategies as well as new data strategies. One of the alternative data strategies commonly used is Event Sourcing  &amp; CQRS (Command Query Responsibility Segregation).</p>\n<p>In this talk, we will take a look at motivations for and the architecture of ES &amp; CQRS. We will also dig into an example implementation of ES &amp; CQRS implemented with Akka and Java. The Akka toolkit provides an actor based implementation of Event Sourcing &amp; CQRS, which means that you can build solutions that run in distributed clusters. We will also look at how Akka Persistence is built on other Akka features, such as cluster singletons and cluster sharding.</p>\n",
      "id": "IWD-3231",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/a4fe958588cf00ad3a214ed5303371e3482c4d8f",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Hugh McKee"
          },
          "name": "Hugh McKee"
        }
      ],
      "title": "Clustered Event Sourcing and CQRS with Akka and Java",
      "lang": "en",
      "summary": "The decomposition of the monolith into systems of microservices does not only involve the division of monolithic code it also often includes the dissolution of monolithic data. Therefore building systems composed of loosely coupled microservices requires new software strategies as well as new data strategies. One of the alternative data strategies commonly used is Event Sourcing  & CQRS (Command Query Responsibility Segregation).\r\n\r\nIn this talk, we will take a look at motivations for and the architecture of ES & CQRS. We will also dig into an example implementation of ES & CQRS implemented with Akka and Java. The Akka toolkit provides an actor based implementation of Event Sourcing & CQRS, which means that you can build solutions that run in distributed clusters. We will also look at how Akka Persistence is built on other Akka features, such as cluster singletons and cluster sharding."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529669400000,
    "toTime": "14:10",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_friday_22_13h20_14h10",
    "day": "friday"
  },
  {
    "roomId": "x_lab_room1",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "web",
      "talkType": "Hands-on Labs",
      "track": "Modern Web",
      "summaryAsHtml": "<p>The world is about to split between centralizers and decentralizers. Which side are you gonna pick? How to choose it? Well, the first step is to understand what is the technology at the base of this separation and because most likely you speak code like me, what best way is to understand it than using code examples?</p>\n<p>Many people think that this technology will change the internet and our life, bringing us the web 3.0, a new web more democratic where you will not need to give up to your privacy or security in order to get services. Is it really going to happen? We will see...but better be ready in case.</p>\n",
      "id": "IKE-5795",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/8480ddb472624bb3294effe85786c667be857a96",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Mario Romano"
          },
          "name": "Mario Romano"
        }
      ],
      "title": "Blockchain By Code examples",
      "lang": "en",
      "summary": "The world is about to split between centralizers and decentralizers. Which side are you gonna pick? How to choose it? Well, the first step is to understand what is the technology at the base of this separation and because most likely you speak code like me, what best way is to understand it than using code examples?\r\n\r\nMany people think that this technology will change the internet and our life, bringing us the web 3.0, a new web more democratic where you will not need to give up to your privacy or security in order to get services. Is it really going to happen? We will see...but better be ready in case."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529677200000,
    "toTime": "16:20",
    "roomCapacity": 50,
    "roomName": "Lab Room A",
    "slotId": "lab_x_lab_room1_friday_22_13h20_16h20",
    "day": "friday"
  },
  {
    "roomId": "x_lab_room2",
    "notAllocated": false,
    "fromTimeMillis": 1529666400000,
    "break": null,
    "roomSetup": "classroom",
    "talk": {
      "trackId": "security",
      "talkType": "Hands-on Labs",
      "track": "Security",
      "summaryAsHtml": "<p>This training, designed with developers in mind, is a live hacking event. You will see some of the most common and serious security issues pentesters and hackers discover in their daily jobs.</p>\n<p>The application contains a vast number of hacking challenges of varying difficulty. You will work in teams and compete against each other to identify and exploit the underlying vulnerabilities. Hacking progress is tracked on a score board. Finding this score board will be your first challenge.</p>\n<p>We will discuss the real life impact of some of these vulnerabilities and how to fix them with little effort.</p>\n",
      "id": "BQG-7655",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/e43dd27dd94538c093dc2df146659da94af804f0",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Lukasz Golygowski"
          },
          "name": "Lukasz Golygowski"
        }
      ],
      "title": "Hack Your Way to Application Security",
      "lang": "en",
      "summary": "This training, designed with developers in mind, is a live hacking event. You will see some of the most common and serious security issues pentesters and hackers discover in their daily jobs.\r\n \r\nThe application contains a vast number of hacking challenges of varying difficulty. You will work in teams and compete against each other to identify and exploit the underlying vulnerabilities. Hacking progress is tracked on a score board. Finding this score board will be your first challenge.\r\n \r\nWe will discuss the real life impact of some of these vulnerabilities and how to fix them with little effort."
    },
    "fromTime": "13:20",
    "toTimeMillis": 1529677200000,
    "toTime": "16:20",
    "roomCapacity": 50,
    "roomName": "Lab Room B",
    "slotId": "lab_x_lab_room2_friday_22_13h20_16h20",
    "day": "friday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529670600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "java",
      "talkType": "Conference",
      "track": "Java Language",
      "summaryAsHtml": "<p>What are reliable ways of building responsive and scalable services?\nWhat does it means for our programs to be asynchronous and back pressured and why is it important? This talks aims to answer these questions. We’ll cover:</p>\n<ul>\n<li>Thread per request vs asynchronous services</li>\n<li>What back pressure is and how to do it all the way down to the network layer</li>\n<li>How to achieve all of this with Akka HTTP and Akka Streams</li>\n<li>How it compares to other tools for asynchronous programming e.g. CompletableFutures, Observables</li>\n<li>Reactive streams specification and API</li>\n</ul>\n<p>Time permitting we’ll also demo a networked application built with Akka sending back pressure through the application layer, through TCP and into the client application.</p>\n",
      "id": "RXW-7617",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/a06aab6af059269164852213b86972a493506713",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Christopher Batey"
          },
          "name": "Christopher Batey"
        }
      ],
      "title": " Building responsive, scalable systems with asynchrony and flow control ",
      "lang": "en",
      "summary": "What are reliable ways of building responsive and scalable services?\r\nWhat does it means for our programs to be asynchronous and back pressured and why is it important? This talks aims to answer these questions. We’ll cover:\r\n\r\n* Thread per request vs asynchronous services\r\n* What back pressure is and how to do it all the way down to the network layer\r\n* How to achieve all of this with Akka HTTP and Akka Streams\r\n* How it compares to other tools for asynchronous programming e.g. CompletableFutures, Observables\r\n* Reactive streams specification and API\r\n\r\nTime permitting we’ll also demo a networked application built with Akka sending back pressure through the application layer, through TCP and into the client application.\r\n\r\n"
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529673600000,
    "toTime": "15:20",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "conf_a_room_1_friday_22_14h30_15h20",
    "day": "friday"
  },
  {
    "roomId": "room_2",
    "notAllocated": false,
    "fromTimeMillis": 1529670600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "ssj",
      "talkType": "Conference",
      "track": "Server Side Java",
      "summaryAsHtml": "<p>You know what nobody has ever said to me? \"I wish you'd covered even more in your 45 minute 'Cloud Native Java' talk!\" And I listened! In this talk, we'll look at Spring Cloud.next to support modern microservices development, focusing on the things that really matter (or, at least, the things we've got cooking in Spring Boot 2.0 and Spring Cloud Finchley, both due before April or so):</p>\n<p>functions-as-a-service with Spring Cloud Function. We've got FUNCTIONS (wrapped in apps, in containers, running on servers, in datacenters)\nfunctional reactive REST endpoints (totally different meaning for \"function\" here, though)\nreactive programming with Spring Framework 5. Leverage flow control at every layer and make the most efficient use of every CPU when doing input/output. You're going to need every bit of efficiency that you can get after you've installed the patches for Spectre and Meltdown!\nKotlin. Yes, KOTLIN: you wanted Java and I'm giving it to you.. in libraries that I'll use from Kotlin.\nmessaging with Apache Kafka. Nothing funny here. It's just awesome.\nLive on the edge with the new, reactive, rate-limiting, proxying, websocket-aware Spring Cloud Gateway\nASCII art!</p>\n",
      "id": "BUC-2692",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/039f1c83c20debd286fce42036332a11fd2f9e18",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Josh Long"
          },
          "name": "Josh Long"
        }
      ],
      "title": "Cloud Native Java, part 2 - cont.",
      "lang": "en",
      "summary": "You know what nobody has ever said to me? \"I wish you'd covered even more in your 45 minute 'Cloud Native Java' talk!\" And I listened! In this talk, we'll look at Spring Cloud.next to support modern microservices development, focusing on the things that really matter (or, at least, the things we've got cooking in Spring Boot 2.0 and Spring Cloud Finchley, both due before April or so):\r\n\r\nfunctions-as-a-service with Spring Cloud Function. We've got FUNCTIONS (wrapped in apps, in containers, running on servers, in datacenters)\r\nfunctional reactive REST endpoints (totally different meaning for \"function\" here, though)\r\nreactive programming with Spring Framework 5. Leverage flow control at every layer and make the most efficient use of every CPU when doing input/output. You're going to need every bit of efficiency that you can get after you've installed the patches for Spectre and Meltdown!\r\nKotlin. Yes, KOTLIN: you wanted Java and I'm giving it to you.. in libraries that I'll use from Kotlin.\r\nmessaging with Apache Kafka. Nothing funny here. It's just awesome.\r\nLive on the edge with the new, reactive, rate-limiting, proxying, websocket-aware Spring Cloud Gateway\r\nASCII art!"
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529673600000,
    "toTime": "15:20",
    "roomCapacity": 600,
    "roomName": "Room 2",
    "slotId": "conf_room_2_friday_22_14h30_15h20",
    "day": "friday"
  },
  {
    "roomId": "room_3",
    "notAllocated": false,
    "fromTimeMillis": 1529670600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "security",
      "talkType": "Conference",
      "track": "Security",
      "summaryAsHtml": "<p>We are in an era where we do almost everything through the internet, this has some implications, such as the need to identify ourselves before making a transaction. Therefore, each system we develop must have mechanisms to allow users to identify themselves, the famous login. One of the drawbacks of this, is that we must ensure that the information of each user is stored with strict security rules, on the other hand each user must create a password to access, each platform sets its own rules, and finally the users create unsafe passwords or forgot them.</p>\n<p>There are mechanisms that make this process less complicated for both, developers and users. Passwordless and Federated Identities, that allow users to login without having to create a password, and developers will not have to store that information under strict security protocols.</p>\n<p>This sessions seeks to explain in detail What Passwordless is? What strategies exist and how implement them. The Federated Identity and how implement that. Finally how do those thins using PaaS Technologies.</p>\n",
      "id": "UWK-3243",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/2b10f49a93bf2a616eb419d528bdae906faf194a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Mercedes Wyss"
          },
          "name": "Mercedes Wyss"
        }
      ],
      "title": "Magic Without Password, Passwordless and Federate Identity",
      "lang": "en",
      "summary": "We are in an era where we do almost everything through the internet, this has some implications, such as the need to identify ourselves before making a transaction. Therefore, each system we develop must have mechanisms to allow users to identify themselves, the famous login. One of the drawbacks of this, is that we must ensure that the information of each user is stored with strict security rules, on the other hand each user must create a password to access, each platform sets its own rules, and finally the users create unsafe passwords or forgot them. \r\n\r\nThere are mechanisms that make this process less complicated for both, developers and users. Passwordless and Federated Identities, that allow users to login without having to create a password, and developers will not have to store that information under strict security protocols.\r\n\r\nThis sessions seeks to explain in detail What Passwordless is? What strategies exist and how implement them. The Federated Identity and how implement that. Finally how do those thins using PaaS Technologies."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529673600000,
    "toTime": "15:20",
    "roomCapacity": 400,
    "roomName": "Room 3",
    "slotId": "conf_room_3_friday_22_14h30_15h20",
    "day": "friday"
  },
  {
    "roomId": "room_4",
    "notAllocated": false,
    "fromTimeMillis": 1529670600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Conference",
      "track": "Architecture",
      "summaryAsHtml": "<p>Microservice architectures provide a robust challenge to the traditional centralized database we have come to understand. In this talk, we’ll explore the notion of unbundling that database, and putting a distributed commit log at the center of our information architecture. As events impinge on our system, we store them in a durable, immutable log (happily provided by Apache Kafka), allowing each microservice to create a derived view of the data according to the needs of its clients. Event-based integration avoids the now-well-known problems of RPC and database-based service integration, and allows the information architecture of the future to take advantage of the growing functionality of stream processing systems like Kafka, allowing us to create systems that can more easily adapt to the changing needs of the enterprise and provide the real-time results we are increasingly being asked to provide.</p>\n",
      "id": "AWP-2272",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/56d788a1dc7cc798a1be226c6b2b00b2a12f58be",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Tim Berglund"
          },
          "name": "Tim Berglund"
        }
      ],
      "title": "The Database Unbundled: Commit Logs in an Age of Microservices",
      "lang": "en",
      "summary": "Microservice architectures provide a robust challenge to the traditional centralized database we have come to understand. In this talk, we’ll explore the notion of unbundling that database, and putting a distributed commit log at the center of our information architecture. As events impinge on our system, we store them in a durable, immutable log (happily provided by Apache Kafka), allowing each microservice to create a derived view of the data according to the needs of its clients. Event-based integration avoids the now-well-known problems of RPC and database-based service integration, and allows the information architecture of the future to take advantage of the growing functionality of stream processing systems like Kafka, allowing us to create systems that can more easily adapt to the changing needs of the enterprise and provide the real-time results we are increasingly being asked to provide."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529673600000,
    "toTime": "15:20",
    "roomCapacity": 400,
    "roomName": "Room 4",
    "slotId": "conf_room_4_friday_22_14h30_15h20",
    "day": "friday"
  },
  {
    "roomId": "room_5",
    "notAllocated": false,
    "fromTimeMillis": 1529670600000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "method_archi",
      "talkType": "Conference",
      "track": "Methodology &amp; Culture",
      "summaryAsHtml": "<p>In this talk we will get familiar with the concept of Model Dependent Realism, coined by Stephen Hawking and Leonard Mlodinow. We will then apply it to reason about Software Development as operating hierarchy of languages and abstractions.</p>\n<p>Equipped with the new mental model, we will try to disect and understand the phenomenon of complexity - concept so ill-defined and misused that it has grown an aura of mysticism around.</p>\n<p>There is an uncompensated bias among software engineers to address the known problems - the technicalities. This bias is reflected by topics of most software conference talks, where technical solutions are presented addressing narrow groups of problems. This bias puts evolution of our discipline at risk.</p>\n<p>The main goal is to induce particular way of thinking and give some guidance for engineers. To even out the bias and have more engineering time and energy devoted for the most crucial subject - how to develop interfaces that can be understood by layman. How to develop systems that perfectly match the business they represent. How to reduce the complexity of our products and processes and how to be better engineers.</p>\n",
      "id": "LMP-0235",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/3238dd647781ed8a294b01fc1de2b0a3a7a2708a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Julian Warszawski"
          },
          "name": "Julian Warszawski"
        }
      ],
      "title": "Models vs Reality: Quest for the Roots of Complexity",
      "lang": "en",
      "summary": "  In this talk we will get familiar with the concept of Model Dependent Realism, coined by Stephen Hawking and Leonard Mlodinow. We will then apply it to reason about Software Development as operating hierarchy of languages and abstractions.\r\n\r\n  Equipped with the new mental model, we will try to disect and understand the phenomenon of complexity - concept so ill-defined and misused that it has grown an aura of mysticism around. \r\n\r\nThere is an uncompensated bias among software engineers to address the known problems - the technicalities. This bias is reflected by topics of most software conference talks, where technical solutions are presented addressing narrow groups of problems. This bias puts evolution of our discipline at risk.\r\n\r\nThe main goal is to induce particular way of thinking and give some guidance for engineers. To even out the bias and have more engineering time and energy devoted for the most crucial subject - how to develop interfaces that can be understood by layman. How to develop systems that perfectly match the business they represent. How to reduce the complexity of our products and processes and how to be better engineers."
    },
    "fromTime": "14:30",
    "toTimeMillis": 1529673600000,
    "toTime": "15:20",
    "roomCapacity": 300,
    "roomName": "Room 5",
    "slotId": "conf_room_5_friday_22_14h30_15h20",
    "day": "friday"
  },
  {
    "roomId": "a_room_1",
    "notAllocated": false,
    "fromTimeMillis": 1529675400000,
    "break": null,
    "roomSetup": "theatre",
    "talk": {
      "trackId": "architecture",
      "talkType": "Closing Keynote",
      "track": "Architecture",
      "summaryAsHtml": "<p>We constantly hear that change should be affordable and cost effective. True, but, in reality, that's easily said than done. Complexity makes change hard. We can't shy away from the hard problems posed by domains and business needs. So, how can we solve complicated problems without getting dragged into the quagmire of what appears to be an inevitable complexity? In this keynote, an award winning author and software practitioner will share experiences and observations from working on multiple software projects, about what leads to complexities, the traps developers and organizations fall into, and what we can do to effectively deal with these common, recurring issues we see across domains and products.</p>\n",
      "id": "FPC-4131",
      "speakers": [
        {
          "link": {
            "href": "http://cfp.devoxx.pl/api/conferences/DevoxxPL2018/speakers/c6165005b41678c48c2d107076ac7ac88a067f5a",
            "rel": "http://cfp.devoxx.pl/api/profile/speaker",
            "title": "Venkat Subramaniam"
          },
          "name": "Venkat Subramaniam"
        }
      ],
      "title": "Do not walk away from Complexity, Run",
      "lang": "en",
      "summary": "We constantly hear that change should be affordable and cost effective. True, but, in reality, that's easily said than done. Complexity makes change hard. We can't shy away from the hard problems posed by domains and business needs. So, how can we solve complicated problems without getting dragged into the quagmire of what appears to be an inevitable complexity? In this keynote, an award winning author and software practitioner will share experiences and observations from working on multiple software projects, about what leads to complexities, the traps developers and organizations fall into, and what we can do to effectively deal with these common, recurring issues we see across domains and products."
    },
    "fromTime": "15:50",
    "toTimeMillis": 1529679000000,
    "toTime": "16:50",
    "roomCapacity": 2100,
    "roomName": "Room 1",
    "slotId": "closing_key_a_room_1_friday_22_15h50_16h50",
    "day": "friday"
  }
]